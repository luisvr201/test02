{"version":3,"file":"static/js/109.ef6d85b6.chunk.js","mappings":"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","sources":["../node_modules/khroma/dist/methods/luminance.js","../node_modules/khroma/dist/methods/is_light.js","../node_modules/khroma/dist/methods/is_dark.js","../node_modules/mermaid/src/diagrams/timeline/parser/timeline.jison","../node_modules/mermaid/src/diagrams/timeline/timelineDb.js","../node_modules/mermaid/src/diagrams/timeline/svgDraw.js","../node_modules/mermaid/src/diagrams/timeline/timelineRenderer.ts","../node_modules/mermaid/src/diagrams/timeline/timeline-definition.ts","../node_modules/mermaid/src/diagrams/timeline/styles.js"],"sourcesContent":["/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\n//SOURCE: https://planetcalc.com/7779\nconst luminance = (color) => {\n    const { r, g, b } = Color.parse(color);\n    const luminance = .2126 * _.channel.toLinear(r) + .7152 * _.channel.toLinear(g) + .0722 * _.channel.toLinear(b);\n    return _.lang.round(luminance);\n};\n/* EXPORT */\nexport default luminance;\n","/* IMPORT */\nimport luminance from './luminance.js';\n/* MAIN */\nconst isLight = (color) => {\n    return luminance(color) >= .5;\n};\n/* EXPORT */\nexport default isLight;\n","/* IMPORT */\nimport isLight from './is_light.js';\n/* MAIN */\nconst isDark = (color) => {\n    return !isLight(color);\n};\n/* EXPORT */\nexport default isDark;\n","/** mermaid\n *  https://mermaidjs.github.io/\n *  (c) 2023 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n%options case-insensitive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n\n// Directive states\n%x open_directive type_directive arg_directive\n\n\n%%\n\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n\\%%(?!\\{)[^\\n]*                                                 /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */\n[\\n]+                   return 'NEWLINE';\n\\s+                     /* skip whitespace */\n\\#[^\\n]*                /* skip comments */\n\n\"timeline\"               return 'timeline';\n\"title\"\\s[^#\\n;]+       return 'title';\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\"section\"\\s[^#:\\n;]+    return 'section';\n\n// event starting with \"==>\" keyword\n\":\"\\s[^#:\\n;]+        return 'event';\n[^#:\\n;]+               return 'period';\n\n\n<<EOF>>                 return 'EOF';\n.                       return 'INVALID';\n\n/lex\n\n%left '^'\n\n%start start\n\n%% /* language grammar */\n\nstart\n\t: timeline document 'EOF' { return $2; }\n\t| directive start\n\t;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NEWLINE { $$=[];}\n\t| EOF { $$=[];}\n\t;\n\ndirective\n  : openDirective typeDirective closeDirective 'NEWLINE'\n  | openDirective typeDirective ':' argDirective closeDirective 'NEWLINE'\n  ;\n\nstatement\n  : title {yy.getCommonDb().setDiagramTitle($1.substr(6));$$=$1.substr(6);}\n  | acc_title acc_title_value  { $$=$2.trim();yy.getCommonDb().setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.getCommonDb().setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.getCommonDb().setAccDescription($$); }\n  | section {yy.addSection($1.substr(8));$$=$1.substr(8);}\n  | period_statement\n  | event_statement\n  | directive\n  ;\nperiod_statement\n  : period {yy.addTask($1,0,'');$$=$1;}\n;\nevent_statement\n  : event {yy.addEvent($1.substr(2));$$=$1;}\n;\n\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'timeline'); }\n  ;\n\n%%\n","import { parseDirective as _parseDirective } from '../../directiveUtils';\nimport * as commonDb from '../../commonDb';\nlet currentSection = '';\nlet currentTaskId = 0;\n\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\n\nexport const getCommonDb = () => commonDb;\n\nexport const parseDirective = (statement, context, type) => {\n  _parseDirective(this, statement, context, type);\n};\n\nexport const clear = function () {\n  sections.length = 0;\n  tasks.length = 0;\n  currentSection = '';\n  rawTasks.length = 0;\n  commonDb.clear();\n};\n\nexport const addSection = function (txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\n\nexport const getSections = function () {\n  return sections;\n};\n\nexport const getTasks = function () {\n  let allItemsProcessed = compileTasks();\n  const maxDepth = 100;\n  let iterationCount = 0;\n  while (!allItemsProcessed && iterationCount < maxDepth) {\n    allItemsProcessed = compileTasks();\n    iterationCount++;\n  }\n\n  tasks.push(...rawTasks);\n\n  return tasks;\n};\n\nexport const addTask = function (period, length, event) {\n  const rawTask = {\n    id: currentTaskId++,\n    section: currentSection,\n    type: currentSection,\n    task: period,\n    score: length ? length : 0,\n    //if event is defined, then add it the events array\n    events: event ? [event] : [],\n  };\n  rawTasks.push(rawTask);\n};\n\nexport const addEvent = function (event) {\n  // fetch current task with currnetTaskId\n  const currentTask = rawTasks.find((task) => task.id === currentTaskId - 1);\n  //add event to the events array\n  currentTask.events.push(event);\n};\n\nexport const addTaskOrg = function (descr) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: [],\n  };\n  tasks.push(newTask);\n};\n\n/**\n * Compiles the raw tasks into a list of tasks with events\n * @returns {boolean} true if all items are processed\n * @private\n * @memberof timelineDb\n */\nconst compileTasks = function () {\n  const compileTask = function (pos) {\n    return rawTasks[pos].processed;\n  };\n\n  let allProcessed = true;\n  for (const [i, rawTask] of rawTasks.entries()) {\n    compileTask(i);\n\n    allProcessed = allProcessed && rawTask.processed;\n  }\n  return allProcessed;\n};\n\nexport default {\n  clear,\n  getCommonDb,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  addTaskOrg,\n  addEvent,\n  parseDirective,\n};\n","import { arc as d3arc, select } from 'd3';\nconst MAX_SECTIONS = 12;\n\nexport const drawRect = function (elem, rectData) {\n  const rectElem = elem.append('rect');\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.y);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', rectData.width);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n\n  if (rectData.class !== undefined) {\n    rectElem.attr('class', rectData.class);\n  }\n\n  return rectElem;\n};\n\nexport const drawFace = function (element, faceData) {\n  const radius = 15;\n  const circleElement = element\n    .append('circle')\n    .attr('cx', faceData.cx)\n    .attr('cy', faceData.cy)\n    .attr('class', 'face')\n    .attr('r', radius)\n    .attr('stroke-width', 2)\n    .attr('overflow', 'visible');\n\n  const face = element.append('g');\n\n  //left eye\n  face\n    .append('circle')\n    .attr('cx', faceData.cx - radius / 3)\n    .attr('cy', faceData.cy - radius / 3)\n    .attr('r', 1.5)\n    .attr('stroke-width', 2)\n    .attr('fill', '#666')\n    .attr('stroke', '#666');\n\n  //right eye\n  face\n    .append('circle')\n    .attr('cx', faceData.cx + radius / 3)\n    .attr('cy', faceData.cy - radius / 3)\n    .attr('r', 1.5)\n    .attr('stroke-width', 2)\n    .attr('fill', '#666')\n    .attr('stroke', '#666');\n\n  /** @param {any} face */\n  function smile(face) {\n    const arc = d3arc()\n      .startAngle(Math.PI / 2)\n      .endAngle(3 * (Math.PI / 2))\n      .innerRadius(radius / 2)\n      .outerRadius(radius / 2.2);\n    //mouth\n    face\n      .append('path')\n      .attr('class', 'mouth')\n      .attr('d', arc)\n      .attr('transform', 'translate(' + faceData.cx + ',' + (faceData.cy + 2) + ')');\n  }\n\n  /** @param {any} face */\n  function sad(face) {\n    const arc = d3arc()\n      .startAngle((3 * Math.PI) / 2)\n      .endAngle(5 * (Math.PI / 2))\n      .innerRadius(radius / 2)\n      .outerRadius(radius / 2.2);\n    //mouth\n    face\n      .append('path')\n      .attr('class', 'mouth')\n      .attr('d', arc)\n      .attr('transform', 'translate(' + faceData.cx + ',' + (faceData.cy + 7) + ')');\n  }\n\n  /** @param {any} face */\n  function ambivalent(face) {\n    face\n      .append('line')\n      .attr('class', 'mouth')\n      .attr('stroke', 2)\n      .attr('x1', faceData.cx - 5)\n      .attr('y1', faceData.cy + 7)\n      .attr('x2', faceData.cx + 5)\n      .attr('y2', faceData.cy + 7)\n      .attr('class', 'mouth')\n      .attr('stroke-width', '1px')\n      .attr('stroke', '#666');\n  }\n\n  if (faceData.score > 3) {\n    smile(face);\n  } else if (faceData.score < 3) {\n    sad(face);\n  } else {\n    ambivalent(face);\n  }\n\n  return circleElement;\n};\n\nexport const drawCircle = function (element, circleData) {\n  const circleElement = element.append('circle');\n  circleElement.attr('cx', circleData.cx);\n  circleElement.attr('cy', circleData.cy);\n  circleElement.attr('class', 'actor-' + circleData.pos);\n  circleElement.attr('fill', circleData.fill);\n  circleElement.attr('stroke', circleData.stroke);\n  circleElement.attr('r', circleData.r);\n\n  if (circleElement.class !== undefined) {\n    circleElement.attr('class', circleElement.class);\n  }\n\n  if (circleData.title !== undefined) {\n    circleElement.append('title').text(circleData.title);\n  }\n\n  return circleElement;\n};\n\nexport const drawText = function (elem, textData) {\n  // Remove and ignore br:s\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, ' ');\n\n  const textElem = elem.append('text');\n  textElem.attr('x', textData.x);\n  textElem.attr('y', textData.y);\n  textElem.attr('class', 'legend');\n\n  textElem.style('text-anchor', textData.anchor);\n\n  if (textData.class !== undefined) {\n    textElem.attr('class', textData.class);\n  }\n\n  const span = textElem.append('tspan');\n  span.attr('x', textData.x + textData.textMargin * 2);\n  span.text(nText);\n\n  return textElem;\n};\n\nexport const drawLabel = function (elem, txtObject) {\n  /**\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} cut\n   */\n  function genPoints(x, y, width, height, cut) {\n    return (\n      x +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      (y + height - cut) +\n      ' ' +\n      (x + width - cut * 1.2) +\n      ',' +\n      (y + height) +\n      ' ' +\n      x +\n      ',' +\n      (y + height)\n    );\n  }\n  const polygon = elem.append('polygon');\n  polygon.attr('points', genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n  polygon.attr('class', 'labelBox');\n\n  txtObject.y = txtObject.y + txtObject.labelMargin;\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n  drawText(elem, txtObject);\n};\n\nexport const drawSection = function (elem, section, conf) {\n  const g = elem.append('g');\n\n  const rect = getNoteRect();\n  rect.x = section.x;\n  rect.y = section.y;\n  rect.fill = section.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = 'journey-section section-type-' + section.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n\n  _drawTextCandidateFunc(conf)(\n    section.text,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'journey-section section-type-' + section.num },\n    conf,\n    section.colour\n  );\n};\n\nlet taskCount = -1;\n/**\n * Draws an actor in the diagram with the attached line\n *\n * @param {any} elem The HTML element\n * @param {any} task The task to render\n * @param {any} conf The global configuration\n */\nexport const drawTask = function (elem, task, conf) {\n  const center = task.x + conf.width / 2;\n  const g = elem.append('g');\n  taskCount++;\n  const maxHeight = 300 + 5 * 30;\n  g.append('line')\n    .attr('id', 'task' + taskCount)\n    .attr('x1', center)\n    .attr('y1', task.y)\n    .attr('x2', center)\n    .attr('y2', maxHeight)\n    .attr('class', 'task-line')\n    .attr('stroke-width', '1px')\n    .attr('stroke-dasharray', '4 2')\n    .attr('stroke', '#666');\n\n  drawFace(g, {\n    cx: center,\n    cy: 300 + (5 - task.score) * 30,\n    score: task.score,\n  });\n\n  const rect = getNoteRect();\n  rect.x = task.x;\n  rect.y = task.y;\n  rect.fill = task.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = 'task task-type-' + task.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n\n  let xPos = task.x + 14;\n  // task.people.forEach((person) => {\n  //   const colour = task.actors[person].color;\n\n  //   const circle = {\n  //     cx: xPos,\n  //     cy: task.y,\n  //     r: 7,\n  //     fill: colour,\n  //     stroke: '#000',\n  //     title: person,\n  //     pos: task.actors[person].position,\n  //   };\n\n  //   drawCircle(g, circle);\n  //   xPos += 10;\n  // });\n\n  _drawTextCandidateFunc(conf)(\n    task.task,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'task' },\n    conf,\n    task.colour\n  );\n};\n\n/**\n * Draws a background rectangle\n *\n * @param {any} elem The html element\n * @param {any} bounds The bounds of the drawing\n */\nexport const drawBackgroundRect = function (elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: 'rect',\n  });\n  rectElem.lower();\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    'text-anchor': 'start',\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nexport const getNoteRect = function () {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    anchor: 'start',\n    height: 100,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nconst _drawTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} colour\n   */\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\n    const text = g\n      .append('text')\n      .attr('x', x + width / 2)\n      .attr('y', y + height / 2 + 5)\n      .style('font-color', colour)\n      .style('text-anchor', 'middle')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   * @param {any} colour\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n    const { taskFontSize, taskFontFamily } = conf;\n\n    const lines = content.split(/<br\\s*\\/?>/gi);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * taskFontSize - (taskFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x + width / 2)\n        .attr('y', y)\n        .attr('fill', colour)\n        .style('text-anchor', 'middle')\n        .style('font-size', taskFontSize)\n        .style('font-family', taskFontFamily);\n      text\n        .append('tspan')\n        .attr('x', x + width / 2)\n        .attr('dy', dy)\n        .text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const body = g.append('switch');\n    const f = body\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('position', 'fixed');\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .attr('class', 'label')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (key in fromTextAttrsDict) {\n        // noinspection JSUnfilteredForInLoop\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nconst initGraphics = function (graphics) {\n  graphics\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('refX', 5)\n    .attr('refY', 2)\n    .attr('markerWidth', 6)\n    .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0,0 V 4 L6,2 Z'); // this is actual shape for arrowhead\n};\n\n/**\n * @param {string} text The text to be wrapped\n * @param {number} width The max width of the text\n */\nfunction wrap(text, width) {\n  text.each(function () {\n    var text = select(this),\n      words = text\n        .text()\n        .split(/(\\s+|<br>)/)\n        .reverse(),\n      word,\n      line = [],\n      lineHeight = 1.1, // ems\n      y = text.attr('y'),\n      dy = parseFloat(text.attr('dy')),\n      tspan = text\n        .text(null)\n        .append('tspan')\n        .attr('x', 0)\n        .attr('y', y)\n        .attr('dy', dy + 'em');\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(' ').trim());\n      if (tspan.node().getComputedTextLength() > width || word === '<br>') {\n        line.pop();\n        tspan.text(line.join(' ').trim());\n        if (word === '<br>') {\n          line = [''];\n        } else {\n          line = [word];\n        }\n\n        tspan = text\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', lineHeight + 'em')\n          .text(word);\n      }\n    }\n  });\n}\n\nexport const drawNode = function (elem, node, fullSection, conf) {\n  const section = (fullSection % MAX_SECTIONS) - 1;\n  const nodeElem = elem.append('g');\n  node.section = section;\n  nodeElem.attr(\n    'class',\n    (node.class ? node.class + ' ' : '') + 'timeline-node ' + ('section-' + section)\n  );\n  const bkgElem = nodeElem.append('g');\n\n  // Create the wrapped text element\n  const textElem = nodeElem.append('g');\n\n  const txt = textElem\n    .append('text')\n    .text(node.descr)\n    .attr('dy', '1em')\n    .attr('alignment-baseline', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize =\n    conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace('px', '') : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.height = Math.max(node.height, node.maxHeight);\n  node.width = node.width + 2 * node.padding;\n\n  textElem.attr('transform', 'translate(' + node.width / 2 + ', ' + node.padding / 2 + ')');\n\n  // Create the background element\n  defaultBkg(bkgElem, node, section, conf);\n\n  return node;\n};\n\nexport const getVirtualNodeHeight = function (elem, node, conf) {\n  const textElem = elem.append('g');\n  const txt = textElem\n    .append('text')\n    .text(node.descr)\n    .attr('dy', '1em')\n    .attr('alignment-baseline', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize =\n    conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace('px', '') : conf.fontSize;\n  textElem.remove();\n  return bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n};\n\nconst defaultBkg = function (elem, node, section) {\n  const rd = 5;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + node.type)\n    .attr(\n      'd',\n      `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${\n        node.width - 2 * rd\n      } q5,0 5,5 v${node.height - rd} H0 Z`\n    );\n\n  elem\n    .append('line')\n    .attr('class', 'node-line-' + section)\n    .attr('x1', 0)\n    .attr('y1', node.height)\n    .attr('x2', node.width)\n    .attr('y2', node.height);\n};\n\nexport default {\n  drawRect,\n  drawCircle,\n  drawSection,\n  drawText,\n  drawLabel,\n  drawTask,\n  drawBackgroundRect,\n  getTextObj,\n  getNoteRect,\n  initGraphics,\n  drawNode,\n  getVirtualNodeHeight,\n};\n","// @ts-ignore - db not typed yet\nimport { select, Selection } from 'd3';\nimport svgDraw from './svgDraw';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\nimport { Diagram } from '../../Diagram';\nimport { MermaidConfig } from '../../config.type';\n\ninterface Block<TDesc, TSection> {\n  number: number;\n  descr: TDesc;\n  section: TSection;\n  width: number;\n  padding: number;\n  maxHeight: number;\n}\n\ninterface TimelineTask {\n  id: number;\n  section: string;\n  type: string;\n  task: string;\n  score: number;\n  events: string[];\n}\nexport const draw = function (text: string, id: string, version: string, diagObj: Diagram) {\n  //1. Fetch the configuration\n  const conf = getConfig();\n  // @ts-expect-error - wrong config?\n  const LEFT_MARGIN = conf.leftMargin ?? 50;\n\n  //2. Clear the diagram db before parsing\n  diagObj.db.clear?.();\n\n  //3. Parse the diagram text\n  diagObj.parser.parse(text + '\\n');\n\n  log.debug('timeline', diagObj.db);\n\n  const securityLevel = conf.securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? // @ts-ignore d3 types are wrong\n        select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n\n  // @ts-ignore d3 types are wrong\n  const svg = root.select('#' + id);\n\n  svg.append('g');\n\n  //4. Fetch the diagram data\n  // @ts-expect-error - db not typed yet\n  const tasks: TimelineTask[] = diagObj.db.getTasks();\n  // @ts-expect-error - db not typed yet\n  const title = diagObj.db.getCommonDb().getDiagramTitle();\n  log.debug('task', tasks);\n\n  //5. Initialize the diagram\n  svgDraw.initGraphics(svg);\n\n  // fetch Sections\n  // @ts-expect-error - db not typed yet\n  const sections: string[] = diagObj.db.getSections();\n  log.debug('sections', sections);\n\n  let maxSectionHeight = 0;\n  let maxTaskHeight = 0;\n  //let sectionBeginX = 0;\n  let depthY = 0;\n  let sectionBeginY = 0;\n  let masterX = 50 + LEFT_MARGIN;\n  //sectionBeginX = masterX;\n  let masterY = 50;\n  sectionBeginY = 50;\n  //draw sections\n  let sectionNumber = 0;\n  let hasSections = true;\n\n  //Calculate the max height of the sections\n  sections.forEach(function (section: string) {\n    const sectionNode: Block<string, number> = {\n      number: sectionNumber,\n      descr: section,\n      section: sectionNumber,\n      width: 150,\n      padding: 20,\n      maxHeight: maxSectionHeight,\n    };\n    const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\n    log.debug('sectionHeight before draw', sectionHeight);\n    maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\n  });\n\n  //tasks length and maxEventCount\n  let maxEventCount = 0;\n  let maxEventLineLength = 0;\n  log.debug('tasks.length', tasks.length);\n  //calculate max task height\n  // for loop till tasks.length\n\n  for (const [i, task] of tasks.entries()) {\n    const taskNode: Block<TimelineTask, string> = {\n      number: i,\n      descr: task,\n      section: task.section,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight,\n    };\n    const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\n    log.debug('taskHeight before draw', taskHeight);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\n\n    //calculate maxEventCount\n    maxEventCount = Math.max(maxEventCount, task.events.length);\n    //calculate maxEventLineLength\n    let maxEventLineLengthTemp = 0;\n    for (let j = 0; j < task.events.length; j++) {\n      const event = task.events[j];\n      const eventNode = {\n        descr: event,\n        section: task.section,\n        number: task.section,\n        width: 150,\n        padding: 20,\n        maxHeight: 50,\n      };\n      maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\n    }\n    maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\n  }\n\n  log.debug('maxSectionHeight before draw', maxSectionHeight);\n  log.debug('maxTaskHeight before draw', maxTaskHeight);\n\n  if (sections && sections.length > 0) {\n    sections.forEach((section) => {\n      //filter task where tasks.section == section\n      const tasksForSection = tasks.filter((task) => task.section === section);\n\n      const sectionNode: Block<string, number> = {\n        number: sectionNumber,\n        descr: section,\n        section: sectionNumber,\n        width: 200 * Math.max(tasksForSection.length, 1) - 50,\n        padding: 20,\n        maxHeight: maxSectionHeight,\n      };\n      log.debug('sectionNode', sectionNode);\n      const sectionNodeWrapper = svg.append('g');\n      const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\n      log.debug('sectionNode output', node);\n\n      sectionNodeWrapper.attr('transform', `translate(${masterX}, ${sectionBeginY})`);\n\n      masterY += maxSectionHeight + 50;\n\n      //draw tasks for this section\n      if (tasksForSection.length > 0) {\n        drawTasks(\n          svg,\n          tasksForSection,\n          sectionNumber,\n          masterX,\n          masterY,\n          maxTaskHeight,\n          conf,\n          maxEventCount,\n          maxEventLineLength,\n          maxSectionHeight,\n          false\n        );\n      }\n      // todo replace with total width of section and its tasks\n      masterX += 200 * Math.max(tasksForSection.length, 1);\n\n      masterY = sectionBeginY;\n      sectionNumber++;\n    });\n  } else {\n    //draw tasks\n    hasSections = false;\n    drawTasks(\n      svg,\n      tasks,\n      sectionNumber,\n      masterX,\n      masterY,\n      maxTaskHeight,\n      conf,\n      maxEventCount,\n      maxEventLineLength,\n      maxSectionHeight,\n      true\n    );\n  }\n\n  // Get BBox of the diagram\n  const box = svg.node().getBBox();\n  log.debug('bounds', box);\n\n  if (title) {\n    svg\n      .append('text')\n      .text(title)\n      .attr('x', box.width / 2 - LEFT_MARGIN)\n      .attr('font-size', '4ex')\n      .attr('font-weight', 'bold')\n      .attr('y', 20);\n  }\n  //5. Draw the diagram\n  depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\n\n  const lineWrapper = svg.append('g').attr('class', 'lineWrapper');\n  // Draw activity line\n  lineWrapper\n    .append('line')\n    .attr('x1', LEFT_MARGIN)\n    .attr('y1', depthY) // One section head + one task + margins\n    .attr('x2', box.width + 3 * LEFT_MARGIN) // Subtract stroke width so arrow point is retained\n    .attr('y2', depthY)\n    .attr('stroke-width', 4)\n    .attr('stroke', 'black')\n    .attr('marker-end', 'url(#arrowhead)');\n\n  // Setup the view box and size of the svg element\n  setupGraphViewbox(\n    undefined,\n    svg,\n    conf.timeline?.padding ?? 50,\n    conf.timeline?.useMaxWidth ?? false\n  );\n\n  // addSVGAccessibilityFields(diagObj.db, diagram, id);\n};\n\nexport const drawTasks = function (\n  diagram: Selection<SVGElement, unknown, null, undefined>,\n  tasks: TimelineTask[],\n  sectionColor: number,\n  masterX: number,\n  masterY: number,\n  maxTaskHeight: number,\n  conf: MermaidConfig,\n  maxEventCount: number,\n  maxEventLineLength: number,\n  maxSectionHeight: number,\n  isWithoutSections: boolean\n) {\n  // Draw the tasks\n  for (const task of tasks) {\n    // create node from task\n    const taskNode = {\n      descr: task.task,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight,\n    };\n\n    log.debug('taskNode', taskNode);\n    // create task wrapper\n\n    const taskWrapper = diagram.append('g').attr('class', 'taskWrapper');\n    const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\n    const taskHeight = node.height;\n    //log task height\n    log.debug('taskHeight after draw', taskHeight);\n    taskWrapper.attr('transform', `translate(${masterX}, ${masterY})`);\n\n    // update max task height\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\n\n    // if task has events, draw them\n    if (task.events) {\n      // draw a line between the task and the events\n      const lineWrapper = diagram.append('g').attr('class', 'lineWrapper');\n      let lineLength = maxTaskHeight;\n      //add margin to task\n      masterY += 100;\n      lineLength =\n        lineLength + drawEvents(diagram, task.events, sectionColor, masterX, masterY, conf);\n      masterY -= 100;\n\n      lineWrapper\n        .append('line')\n        .attr('x1', masterX + 190 / 2)\n        .attr('y1', masterY + maxTaskHeight) // One section head + one task + margins\n        .attr('x2', masterX + 190 / 2) // Subtract stroke width so arrow point is retained\n        .attr(\n          'y2',\n          masterY +\n            maxTaskHeight +\n            (isWithoutSections ? maxTaskHeight : maxSectionHeight) +\n            maxEventLineLength +\n            120\n        )\n        .attr('stroke-width', 2)\n        .attr('stroke', 'black')\n        .attr('marker-end', 'url(#arrowhead)')\n        .attr('stroke-dasharray', '5,5');\n    }\n\n    masterX = masterX + 200;\n    if (isWithoutSections && !conf.timeline?.disableMulticolor) {\n      sectionColor++;\n    }\n  }\n\n  // reset Y coordinate for next section\n  masterY = masterY - 10;\n};\n\nexport const drawEvents = function (\n  diagram: Selection<SVGElement, unknown, null, undefined>,\n  events: string[],\n  sectionColor: number,\n  masterX: number,\n  masterY: number,\n  conf: MermaidConfig\n) {\n  let maxEventHeight = 0;\n  const eventBeginY = masterY;\n  masterY = masterY + 100;\n  // Draw the events\n  for (const event of events) {\n    // create node from event\n    const eventNode: Block<string, number> = {\n      descr: event,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: 50,\n    };\n\n    //log task node\n    log.debug('eventNode', eventNode);\n    // create event wrapper\n    const eventWrapper = diagram.append('g').attr('class', 'eventWrapper');\n    const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\n    const eventHeight = node.height;\n    maxEventHeight = maxEventHeight + eventHeight;\n    eventWrapper.attr('transform', `translate(${masterX}, ${masterY})`);\n    masterY = masterY + 10 + eventHeight;\n  }\n  // set masterY back to eventBeginY\n  masterY = eventBeginY;\n  return maxEventHeight;\n};\n\nexport default {\n  setConf: () => {\n    // no-op\n  },\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/timeline.jison';\nimport * as db from './timelineDb';\nimport renderer from './timelineRenderer';\nimport styles from './styles';\n\nexport const diagram = {\n  db,\n  renderer,\n  parser,\n  styles,\n};\n","import { darken, lighten, isDark } from 'khroma';\n\nconst genSections = (options) => {\n  let sections = '';\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options['lineColor' + i] = options['lineColor' + i] || options['cScaleInv' + i];\n    if (isDark(options['lineColor' + i])) {\n      options['lineColor' + i] = lighten(options['lineColor' + i], 20);\n    } else {\n      options['lineColor' + i] = darken(options['lineColor' + i], 20);\n    }\n  }\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = '' + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${\n      i - 1\n    } path  {\n      fill: ${options['cScale' + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options['cScaleLabel' + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options['cScaleLabel' + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options['cScale' + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options['cScaleInv' + i]} ;\n      stroke-width: 3;\n    }\n\n    .lineWrapper line{\n      stroke: ${options['cScaleLabel' + i]} ;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\n\nconst getStyles = (options) =>\n  `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .eventWrapper  {\n   filter: brightness(120%);\n  }\n`;\nexport default getStyles;\n"],"names":["color","r","g","b","Color","parse","luminance","_","channel","toLinear","lang","round","isLight","parser","o","k","v","o2","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","push","getCommonDb","setDiagramTitle","substr","trim","setAccTitle","setAccDescription","addSection","addTask","addEvent","parseDirective","replace","table","defaultActions","parseError","str","hash","recoverable","error","Error","input","self","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","lex","token","pop","Array","getPrototypeOf","symbol","state","action","p","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","currentSection","currentTaskId","sections","tasks","rawTasks","commonDb","statement","context","type","parseDirective$1","globalThis","clear","clear$1","txt","getSections","getTasks","allItemsProcessed","compileTasks","iterationCount","period","event","rawTask","id","section","task","score","events","find","addTaskOrg","descr","newTask","description","classes","allProcessed","entries","processed","timelineDb","byText","content","x","y","width","height","textAttrs","colour","_setTextAttrs","append","attr","style","byTspan","conf","taskFontSize","taskFontFamily","dy","byFo","body","toText","fromTextAttrsDict","key","wrap","each","word","text2","select","this","words","reverse","parseFloat","tspan","j","node","getComputedTextLength","lineHeight","defaultBkg","elem","svgDraw","graphics","fullSection","nodeElem","class","bkgElem","textElem","bbox","getBBox","fontSize","padding","max","maxHeight","remove","drawTasks","diagram2","tasks2","sectionColor","masterX","masterY","maxTaskHeight","maxEventCount","maxEventLineLength","maxSectionHeight","isWithoutSections","taskNode","number","log","debug","taskWrapper","taskHeight","lineWrapper","lineLength","drawEvents","_a","timeline","disableMulticolor","maxEventHeight","eventBeginY","eventNode","eventWrapper","eventHeight","diagram","db","renderer","setConf","draw","version","diagObj","_conf$leftMargin","_ref","_ref2","getConfig","LEFT_MARGIN","leftMargin","_b","securityLevel","sandboxElement","svg","nodes","contentDocument","title","getDiagramTitle","sections2","depthY","sectionBeginY","sectionNumber","hasSections","forEach","sectionHeight","maxEventLineLengthTemp","tasksForSection","filter","sectionNode","sectionNodeWrapper","box","setupGraphViewbox","_c","_d","useMaxWidth","styles","THEME_COLOR_LIMIT","isDark","lighten","darken","sw","genSections","git0","gitBranchLabel0"],"sourceRoot":""}