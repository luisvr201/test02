{"version":3,"file":"static/js/309.4ad1f994.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/mermaid/src/diagrams/er/parser/erDiagram.jison","../node_modules/mermaid/src/diagrams/er/erDb.js","../node_modules/mermaid/src/diagrams/er/erMarkers.js","../node_modules/mermaid/src/diagrams/er/erRenderer.js","../node_modules/mermaid/src/diagrams/er/erDiagram.ts","../node_modules/mermaid/src/diagrams/er/styles.js"],"sourcesContent":["import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","%lex\n\n%options case-insensitive\n%x open_directive type_directive arg_directive block\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n\n%%\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n\\%%(?!\\{)[^\\n]*                                                 /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */\n[\\n]+                           return 'NEWLINE';\n\\s+                             /* skip whitespace */\n[\\s]+                           return 'SPACE';\n\\\"[^\"%\\r\\n\\v\\b\\\\]+\\\"            return 'ENTITY_NAME';\n\\\"[^\"]*\\\"                       return 'WORD';\n\"erDiagram\"                     return 'ER_DIAGRAM';\n\"{\"                             { this.begin(\"block\"); return 'BLOCK_START'; }\n<block>\",\"                      return 'COMMA';\n<block>\\s+                      /* skip whitespace in block */\n<block>\\b((?:PK)|(?:FK)|(?:UK))\\b      return 'ATTRIBUTE_KEY'\n<block>(.*?)[~](.*?)*[~]        return 'ATTRIBUTE_WORD';\n<block>[A-Za-z_][A-Za-z0-9\\-_\\[\\]\\(\\)]*  return 'ATTRIBUTE_WORD'\n<block>\\\"[^\"]*\\\"                return 'COMMENT';\n<block>[\\n]+                    /* nothing */\n<block>\\%%(?!\\{)[^\\n]*          /* skip comments in attribute block */\n<block>[^\\}]\\%\\%[^\\n]*          /* skip comments in attribute block */\n<block>\"}\"                      { this.popState(); return 'BLOCK_STOP'; }\n<block>.                        return yytext[0];\n\n\"one or zero\"                   return 'ZERO_OR_ONE';\n\"one or more\"                   return 'ONE_OR_MORE';\n\"one or many\"                   return 'ONE_OR_MORE';\n\"1+\"                            return 'ONE_OR_MORE';\n\\|o                             return 'ZERO_OR_ONE';\n\"zero or one\"                   return 'ZERO_OR_ONE';\n\"zero or more\"                  return 'ZERO_OR_MORE';\n\"zero or many\"                  return 'ZERO_OR_MORE';\n\"0+\"                            return 'ZERO_OR_MORE';\n\\}o                             return 'ZERO_OR_MORE';\n\"many(0)\"                       return 'ZERO_OR_MORE';\n\"many(1)\"                       return 'ONE_OR_MORE';\n\"many\"                          return 'ZERO_OR_MORE';\n\\}\\|                            return 'ONE_OR_MORE';\n\"one\"                           return 'ONLY_ONE';\n\"only one\"                      return 'ONLY_ONE';\n\"1\"                             return 'ONLY_ONE';\n\\|\\|                            return 'ONLY_ONE';\no\\|                             return 'ZERO_OR_ONE';\no\\{                             return 'ZERO_OR_MORE';\n\\|\\{                            return 'ONE_OR_MORE';\n\\.\\.                            return 'NON_IDENTIFYING';\n\\-\\-                            return 'IDENTIFYING';\n\"to\"                            return 'IDENTIFYING';\n\"optionally to\"                 return 'NON_IDENTIFYING';\n\\.\\-                            return 'NON_IDENTIFYING';\n\\-\\.                            return 'NON_IDENTIFYING';\n[A-Za-z][A-Za-z0-9\\-_]*         return 'ALPHANUM';\n.                               return yytext[0];\n<<EOF>>                         return 'EOF';\n\n/lex\n\n%start start\n%% /* language grammar */\n\nstart\n    : 'ER_DIAGRAM' document 'EOF' { /*console.log('finished parsing');*/ }\n  \t| directive start\n    ;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NEWLINE { $$=[];}\n\t| EOF { $$=[];}\n\t;\n\ndirective\n  : openDirective typeDirective closeDirective 'NEWLINE'\n  | openDirective typeDirective ':' argDirective closeDirective 'NEWLINE'\n  ;\n\nstatement\n    : directive\n    | entityName relSpec entityName ':' role\n      {\n          yy.addEntity($1);\n          yy.addEntity($3);\n          yy.addRelationship($1, $5, $3, $2);\n          /*console.log($1 + $2 + $3 + ':' + $5);*/\n      }\n    | entityName BLOCK_START attributes BLOCK_STOP\n      {\n          /* console.log('detected block'); */\n          yy.addEntity($1);\n          yy.addAttributes($1, $3);\n          /* console.log('handled block'); */\n      }\n    | entityName BLOCK_START BLOCK_STOP { yy.addEntity($1); }\n    | entityName { yy.addEntity($1); }\n    | title title_value  { $$=$2.trim();yy.setAccTitle($$); }\n    | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n    | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n    | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }\n    ;\n\nentityName\n    : 'ALPHANUM'      { $$ = $1; }\n    | 'ENTITY_NAME'      { $$ = $1.replace(/\"/g, ''); }\n    ;\n\nattributes\n    : attribute { $$ = [$1]; }\n    | attribute attributes { $2.push($1); $$=$2; }\n    ;\n\nattribute\n    : attributeType attributeName { $$ = { attributeType: $1, attributeName: $2 }; }\n    | attributeType attributeName attributeKeyTypeList { $$ = { attributeType: $1, attributeName: $2, attributeKeyTypeList: $3 }; }\n    | attributeType attributeName attributeComment { $$ = { attributeType: $1, attributeName: $2, attributeComment: $3 }; }\n    | attributeType attributeName attributeKeyTypeList attributeComment { $$ = { attributeType: $1, attributeName: $2, attributeKeyTypeList: $3, attributeComment: $4 }; }\n    ;\n\n\nattributeType\n    : ATTRIBUTE_WORD { $$=$1; }\n    ;\n\nattributeName\n    : ATTRIBUTE_WORD { $$=$1; }\n    ;\n\nattributeKeyTypeList\n    : attributeKeyType { $$ = [$1]; }\n    | attributeKeyTypeList COMMA attributeKeyType { $1.push($3); $$ = $1; }\n    ;\n\nattributeKeyType\n    : ATTRIBUTE_KEY { $$=$1; }\n    ;\n\nattributeComment\n    : COMMENT { $$=$1.replace(/\"/g, ''); }\n    ;\n\nrelSpec\n    : cardinality relType cardinality\n      {\n        $$ = { cardA: $3, relType: $2, cardB: $1 };\n        /*console.log('relSpec: ' + $3 + $2 + $1);*/\n      }\n    ;\n\ncardinality\n    : 'ZERO_OR_ONE'                  { $$ = yy.Cardinality.ZERO_OR_ONE; }\n    | 'ZERO_OR_MORE'                 { $$ = yy.Cardinality.ZERO_OR_MORE; }\n    | 'ONE_OR_MORE'                  { $$ = yy.Cardinality.ONE_OR_MORE; }\n    | 'ONLY_ONE'                     { $$ = yy.Cardinality.ONLY_ONE; }\n    ;\n\nrelType\n    : 'NON_IDENTIFYING'              { $$ = yy.Identification.NON_IDENTIFYING;  }\n    | 'IDENTIFYING'                  { $$ = yy.Identification.IDENTIFYING; }\n    ;\n\nrole\n    : 'WORD'      { $$ = $1.replace(/\"/g, ''); }\n    | 'ENTITY_NAME' { $$ = $1.replace(/\"/g, ''); }\n    | 'ALPHANUM'  { $$ = $1; }\n    ;\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'er'); }\n  ;\n\n%%\n","import { log } from '../../logger';\nimport mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\n\nimport {\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n  setDiagramTitle,\n  getDiagramTitle,\n} from '../../commonDb';\n\nlet entities = {};\nlet relationships = [];\n\nconst Cardinality = {\n  ZERO_OR_ONE: 'ZERO_OR_ONE',\n  ZERO_OR_MORE: 'ZERO_OR_MORE',\n  ONE_OR_MORE: 'ONE_OR_MORE',\n  ONLY_ONE: 'ONLY_ONE',\n};\n\nconst Identification = {\n  NON_IDENTIFYING: 'NON_IDENTIFYING',\n  IDENTIFYING: 'IDENTIFYING',\n};\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst addEntity = function (name) {\n  if (entities[name] === undefined) {\n    entities[name] = { attributes: [] };\n    log.info('Added new entity :', name);\n  }\n\n  return entities[name];\n};\n\nconst getEntities = () => entities;\n\nconst addAttributes = function (entityName, attribs) {\n  let entity = addEntity(entityName); // May do nothing (if entity has already been added)\n\n  // Process attribs in reverse order due to effect of recursive construction (last attribute is first)\n  let i;\n  for (i = attribs.length - 1; i >= 0; i--) {\n    entity.attributes.push(attribs[i]);\n    log.debug('Added attribute ', attribs[i].attributeName);\n  }\n};\n\n/**\n * Add a relationship\n *\n * @param entA The first entity in the relationship\n * @param rolA The role played by the first entity in relation to the second\n * @param entB The second entity in the relationship\n * @param rSpec The details of the relationship between the two entities\n */\nconst addRelationship = function (entA, rolA, entB, rSpec) {\n  let rel = {\n    entityA: entA,\n    roleA: rolA,\n    entityB: entB,\n    relSpec: rSpec,\n  };\n\n  relationships.push(rel);\n  log.debug('Added new relationship :', rel);\n};\n\nconst getRelationships = () => relationships;\n\nconst clear = function () {\n  entities = {};\n  relationships = [];\n  commonClear();\n};\n\nexport default {\n  Cardinality,\n  Identification,\n  parseDirective,\n  getConfig: () => configApi.getConfig().er,\n  addEntity,\n  addAttributes,\n  getEntities,\n  addRelationship,\n  getRelationships,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  setDiagramTitle,\n  getDiagramTitle,\n};\n","const ERMarkers = {\n  ONLY_ONE_START: 'ONLY_ONE_START',\n  ONLY_ONE_END: 'ONLY_ONE_END',\n  ZERO_OR_ONE_START: 'ZERO_OR_ONE_START',\n  ZERO_OR_ONE_END: 'ZERO_OR_ONE_END',\n  ONE_OR_MORE_START: 'ONE_OR_MORE_START',\n  ONE_OR_MORE_END: 'ONE_OR_MORE_END',\n  ZERO_OR_MORE_START: 'ZERO_OR_MORE_START',\n  ZERO_OR_MORE_END: 'ZERO_OR_MORE_END',\n};\n\n/**\n * Put the markers into the svg DOM for later use with edge paths\n *\n * @param elem\n * @param conf\n */\nconst insertMarkers = function (elem, conf) {\n  let marker;\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONLY_ONE_START)\n    .attr('refX', 0)\n    .attr('refY', 9)\n    .attr('markerWidth', 18)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M9,0 L9,18 M15,0 L15,18');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONLY_ONE_END)\n    .attr('refX', 18)\n    .attr('refY', 9)\n    .attr('markerWidth', 18)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M3,0 L3,18 M9,0 L9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_ONE_START)\n    .attr('refX', 0)\n    .attr('refY', 9)\n    .attr('markerWidth', 30)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 21)\n    .attr('cy', 9)\n    .attr('r', 6);\n  marker.append('path').attr('stroke', conf.stroke).attr('fill', 'none').attr('d', 'M9,0 L9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_ONE_END)\n    .attr('refX', 30)\n    .attr('refY', 9)\n    .attr('markerWidth', 30)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 9)\n    .attr('cy', 9)\n    .attr('r', 6);\n  marker.append('path').attr('stroke', conf.stroke).attr('fill', 'none').attr('d', 'M21,0 L21,18');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONE_OR_MORE_START)\n    .attr('refX', 18)\n    .attr('refY', 18)\n    .attr('markerWidth', 45)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M0,18 Q 18,0 36,18 Q 18,36 0,18 M42,9 L42,27');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONE_OR_MORE_END)\n    .attr('refX', 27)\n    .attr('refY', 18)\n    .attr('markerWidth', 45)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M3,9 L3,27 M9,18 Q27,0 45,18 Q27,36 9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_MORE_START)\n    .attr('refX', 18)\n    .attr('refY', 18)\n    .attr('markerWidth', 57)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 48)\n    .attr('cy', 18)\n    .attr('r', 6);\n  marker\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M0,18 Q18,0 36,18 Q18,36 0,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_MORE_END)\n    .attr('refX', 39)\n    .attr('refY', 18)\n    .attr('markerWidth', 57)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 9)\n    .attr('cy', 18)\n    .attr('r', 6);\n  marker\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M21,18 Q39,0 57,18 Q39,36 21,18');\n\n  return;\n};\n\nexport default {\n  ERMarkers,\n  insertMarkers,\n};\n","import * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { line, curveBasis, select } from 'd3';\nimport { layout as dagreLayout } from 'dagre-d3-es/src/dagre/index.js';\nimport { getConfig } from '../../config';\nimport { log } from '../../logger';\nimport utils from '../../utils';\nimport erMarkers from './erMarkers';\nimport { configureSvgSize } from '../../setupGraphViewbox';\nimport { parseGenericTypes } from '../common/common';\nimport { v5 as uuid5 } from 'uuid';\n\n/** Regex used to remove chars from the entity name so the result can be used in an id */\nconst BAD_ID_CHARS_REGEXP = /[^\\dA-Za-z](\\W)*/g;\n\n// Configuration\nlet conf = {};\n\n// Map so we can look up the id of an entity based on the name\nlet entityNameIds = new Map();\n\n/**\n * Allows the top-level API module to inject config specific to this renderer, storing it in the\n * local conf object. Note that generic config still needs to be retrieved using getConfig()\n * imported from the config module\n *\n * @param cnf\n */\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\n\n/**\n * Draw attributes for an entity\n *\n * @param groupNode The svg group node for the entity\n * @param entityTextNode The svg node for the entity label text\n * @param attributes An array of attributes defined for the entity (each attribute has a type and a\n *   name)\n * @returns {object} The bounding box of the entity, after attributes have been added. The bounding\n *   box has a .width and .height\n */\nconst drawAttributes = (groupNode, entityTextNode, attributes) => {\n  const heightPadding = conf.entityPadding / 3; // Padding internal to attribute boxes\n  const widthPadding = conf.entityPadding / 3; // Ditto\n  const attrFontSize = conf.fontSize * 0.85;\n  const labelBBox = entityTextNode.node().getBBox();\n  const attributeNodes = []; // Intermediate storage for attribute nodes created so that we can do a second pass\n  let hasKeyType = false;\n  let hasComment = false;\n  let maxTypeWidth = 0;\n  let maxNameWidth = 0;\n  let maxKeyWidth = 0;\n  let maxCommentWidth = 0;\n  let cumulativeHeight = labelBBox.height + heightPadding * 2;\n  let attrNum = 1;\n\n  // Check to see if any of the attributes has a key or a comment\n  attributes.forEach((item) => {\n    if (item.attributeKeyTypeList !== undefined && item.attributeKeyTypeList.length > 0) {\n      hasKeyType = true;\n    }\n\n    if (item.attributeComment !== undefined) {\n      hasComment = true;\n    }\n  });\n\n  attributes.forEach((item) => {\n    const attrPrefix = `${entityTextNode.node().id}-attr-${attrNum}`;\n    let nodeHeight = 0;\n\n    const attributeType = parseGenericTypes(item.attributeType);\n\n    // Add a text node for the attribute type\n    const typeNode = groupNode\n      .append('text')\n      .classed('er entityLabel', true)\n      .attr('id', `${attrPrefix}-type`)\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('dominant-baseline', 'middle')\n      .style('text-anchor', 'left')\n      .style('font-family', getConfig().fontFamily)\n      .style('font-size', attrFontSize + 'px')\n      .text(attributeType);\n\n    // Add a text node for the attribute name\n    const nameNode = groupNode\n      .append('text')\n      .classed('er entityLabel', true)\n      .attr('id', `${attrPrefix}-name`)\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('dominant-baseline', 'middle')\n      .style('text-anchor', 'left')\n      .style('font-family', getConfig().fontFamily)\n      .style('font-size', attrFontSize + 'px')\n      .text(item.attributeName);\n\n    const attributeNode = {};\n    attributeNode.tn = typeNode;\n    attributeNode.nn = nameNode;\n\n    const typeBBox = typeNode.node().getBBox();\n    const nameBBox = nameNode.node().getBBox();\n    maxTypeWidth = Math.max(maxTypeWidth, typeBBox.width);\n    maxNameWidth = Math.max(maxNameWidth, nameBBox.width);\n\n    nodeHeight = Math.max(typeBBox.height, nameBBox.height);\n\n    if (hasKeyType) {\n      const keyTypeNodeText =\n        item.attributeKeyTypeList !== undefined ? item.attributeKeyTypeList.join(',') : '';\n\n      const keyTypeNode = groupNode\n        .append('text')\n        .classed('er entityLabel', true)\n        .attr('id', `${attrPrefix}-key`)\n        .attr('x', 0)\n        .attr('y', 0)\n        .style('dominant-baseline', 'middle')\n        .style('text-anchor', 'left')\n        .style('font-family', getConfig().fontFamily)\n        .style('font-size', attrFontSize + 'px')\n        .text(keyTypeNodeText);\n\n      attributeNode.kn = keyTypeNode;\n      const keyTypeBBox = keyTypeNode.node().getBBox();\n      maxKeyWidth = Math.max(maxKeyWidth, keyTypeBBox.width);\n      nodeHeight = Math.max(nodeHeight, keyTypeBBox.height);\n    }\n\n    if (hasComment) {\n      const commentNode = groupNode\n        .append('text')\n        .classed('er entityLabel', true)\n        .attr('id', `${attrPrefix}-comment`)\n        .attr('x', 0)\n        .attr('y', 0)\n        .style('dominant-baseline', 'middle')\n        .style('text-anchor', 'left')\n        .style('font-family', getConfig().fontFamily)\n        .style('font-size', attrFontSize + 'px')\n        .text(item.attributeComment || '');\n\n      attributeNode.cn = commentNode;\n      const commentNodeBBox = commentNode.node().getBBox();\n      maxCommentWidth = Math.max(maxCommentWidth, commentNodeBBox.width);\n      nodeHeight = Math.max(nodeHeight, commentNodeBBox.height);\n    }\n\n    attributeNode.height = nodeHeight;\n    // Keep a reference to the nodes so that we can iterate through them later\n    attributeNodes.push(attributeNode);\n    cumulativeHeight += nodeHeight + heightPadding * 2;\n    attrNum += 1;\n  });\n\n  let widthPaddingFactor = 4;\n  if (hasKeyType) {\n    widthPaddingFactor += 2;\n  }\n  if (hasComment) {\n    widthPaddingFactor += 2;\n  }\n\n  const maxWidth = maxTypeWidth + maxNameWidth + maxKeyWidth + maxCommentWidth;\n\n  // Calculate the new bounding box of the overall entity, now that attributes have been added\n  const bBox = {\n    width: Math.max(\n      conf.minEntityWidth,\n      Math.max(\n        labelBBox.width + conf.entityPadding * 2,\n        maxWidth + widthPadding * widthPaddingFactor\n      )\n    ),\n    height:\n      attributes.length > 0\n        ? cumulativeHeight\n        : Math.max(conf.minEntityHeight, labelBBox.height + conf.entityPadding * 2),\n  };\n\n  if (attributes.length > 0) {\n    // There might be some spare width for padding out attributes if the entity name is very long\n    const spareColumnWidth = Math.max(\n      0,\n      (bBox.width - maxWidth - widthPadding * widthPaddingFactor) / (widthPaddingFactor / 2)\n    );\n\n    // Position the entity label near the top of the entity bounding box\n    entityTextNode.attr(\n      'transform',\n      'translate(' + bBox.width / 2 + ',' + (heightPadding + labelBBox.height / 2) + ')'\n    );\n\n    // Add rectangular boxes for the attribute types/names\n    let heightOffset = labelBBox.height + heightPadding * 2; // Start at the bottom of the entity label\n    let attribStyle = 'attributeBoxOdd'; // We will flip the style on alternate rows to achieve a banded effect\n\n    attributeNodes.forEach((attributeNode) => {\n      // Calculate the alignment y co-ordinate for the type/name of the attribute\n      const alignY = heightOffset + heightPadding + attributeNode.height / 2;\n\n      // Position the type attribute\n      attributeNode.tn.attr('transform', 'translate(' + widthPadding + ',' + alignY + ')');\n\n      // TODO Handle spareWidth in attr('width')\n      // Insert a rectangle for the type\n      const typeRect = groupNode\n        .insert('rect', '#' + attributeNode.tn.node().id)\n        .classed(`er ${attribStyle}`, true)\n        .attr('x', 0)\n        .attr('y', heightOffset)\n        .attr('width', maxTypeWidth + widthPadding * 2 + spareColumnWidth)\n        .attr('height', attributeNode.height + heightPadding * 2);\n\n      const nameXOffset = parseFloat(typeRect.attr('x')) + parseFloat(typeRect.attr('width'));\n\n      // Position the name attribute\n      attributeNode.nn.attr(\n        'transform',\n        'translate(' + (nameXOffset + widthPadding) + ',' + alignY + ')'\n      );\n\n      // Insert a rectangle for the name\n      const nameRect = groupNode\n        .insert('rect', '#' + attributeNode.nn.node().id)\n        .classed(`er ${attribStyle}`, true)\n        .attr('x', nameXOffset)\n        .attr('y', heightOffset)\n        .attr('width', maxNameWidth + widthPadding * 2 + spareColumnWidth)\n        .attr('height', attributeNode.height + heightPadding * 2);\n\n      let keyTypeAndCommentXOffset =\n        parseFloat(nameRect.attr('x')) + parseFloat(nameRect.attr('width'));\n\n      if (hasKeyType) {\n        // Position the key type attribute\n        attributeNode.kn.attr(\n          'transform',\n          'translate(' + (keyTypeAndCommentXOffset + widthPadding) + ',' + alignY + ')'\n        );\n\n        // Insert a rectangle for the key type\n        const keyTypeRect = groupNode\n          .insert('rect', '#' + attributeNode.kn.node().id)\n          .classed(`er ${attribStyle}`, true)\n          .attr('x', keyTypeAndCommentXOffset)\n          .attr('y', heightOffset)\n          .attr('width', maxKeyWidth + widthPadding * 2 + spareColumnWidth)\n          .attr('height', attributeNode.height + heightPadding * 2);\n\n        keyTypeAndCommentXOffset =\n          parseFloat(keyTypeRect.attr('x')) + parseFloat(keyTypeRect.attr('width'));\n      }\n\n      if (hasComment) {\n        // Position the comment attribute\n        attributeNode.cn.attr(\n          'transform',\n          'translate(' + (keyTypeAndCommentXOffset + widthPadding) + ',' + alignY + ')'\n        );\n\n        // Insert a rectangle for the comment\n        groupNode\n          .insert('rect', '#' + attributeNode.cn.node().id)\n          .classed(`er ${attribStyle}`, 'true')\n          .attr('x', keyTypeAndCommentXOffset)\n          .attr('y', heightOffset)\n          .attr('width', maxCommentWidth + widthPadding * 2 + spareColumnWidth)\n          .attr('height', attributeNode.height + heightPadding * 2);\n      }\n\n      // Increment the height offset to move to the next row\n      heightOffset += attributeNode.height + heightPadding * 2;\n\n      // Flip the attribute style for row banding\n      attribStyle = attribStyle === 'attributeBoxOdd' ? 'attributeBoxEven' : 'attributeBoxOdd';\n    });\n  } else {\n    // Ensure the entity box is a decent size without any attributes\n    bBox.height = Math.max(conf.minEntityHeight, cumulativeHeight);\n\n    // Position the entity label in the middle of the box\n    entityTextNode.attr('transform', 'translate(' + bBox.width / 2 + ',' + bBox.height / 2 + ')');\n  }\n\n  return bBox;\n};\n\n/**\n * Use D3 to construct the svg elements for the entities\n *\n * @param svgNode The svg node that contains the diagram\n * @param entities The entities to be drawn\n * @param graph The graph that contains the vertex and edge definitions post-layout\n * @returns {object} The first entity that was inserted\n */\nconst drawEntities = function (svgNode, entities, graph) {\n  const keys = Object.keys(entities);\n  let firstOne;\n\n  keys.forEach(function (entityName) {\n    const entityId = generateId(entityName, 'entity');\n    entityNameIds.set(entityName, entityId);\n\n    // Create a group for each entity\n    const groupNode = svgNode.append('g').attr('id', entityId);\n\n    firstOne = firstOne === undefined ? entityId : firstOne;\n\n    // Label the entity - this is done first so that we can get the bounding box\n    // which then determines the size of the rectangle\n    const textId = 'text-' + entityId;\n    const textNode = groupNode\n      .append('text')\n      .classed('er entityLabel', true)\n      .attr('id', textId)\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('dominant-baseline', 'middle')\n      .style('text-anchor', 'middle')\n      .style('font-family', getConfig().fontFamily)\n      .style('font-size', conf.fontSize + 'px')\n      .text(entityName);\n\n    const { width: entityWidth, height: entityHeight } = drawAttributes(\n      groupNode,\n      textNode,\n      entities[entityName].attributes\n    );\n\n    // Draw the rectangle - insert it before the text so that the text is not obscured\n    const rectNode = groupNode\n      .insert('rect', '#' + textId)\n      .classed('er entityBox', true)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', entityWidth)\n      .attr('height', entityHeight);\n\n    const rectBBox = rectNode.node().getBBox();\n\n    // Add the entity to the graph using the entityId\n    graph.setNode(entityId, {\n      width: rectBBox.width,\n      height: rectBBox.height,\n      shape: 'rect',\n      id: entityId,\n    });\n  });\n  return firstOne;\n}; // drawEntities\n\nconst adjustEntities = function (svgNode, graph) {\n  graph.nodes().forEach(function (v) {\n    if (v !== undefined && graph.node(v) !== undefined) {\n      svgNode\n        .select('#' + v)\n        .attr(\n          'transform',\n          'translate(' +\n            (graph.node(v).x - graph.node(v).width / 2) +\n            ',' +\n            (graph.node(v).y - graph.node(v).height / 2) +\n            ' )'\n        );\n    }\n  });\n};\n\n/**\n * Construct a name for an edge based on the names of the 2 entities and the role (relationship)\n * between them. Remove any spaces from it\n *\n * @param rel - A (parsed) relationship (e.g. one of the objects in the list returned by\n *   erDb.getRelationships)\n * @returns {string}\n */\nconst getEdgeName = function (rel) {\n  return (rel.entityA + rel.roleA + rel.entityB).replace(/\\s/g, '');\n};\n\n/**\n * Add each relationship to the graph\n *\n * @param relationships The relationships to be added\n * @param g The graph\n * @returns {Array} The array of relationships\n */\nconst addRelationships = function (relationships, g) {\n  relationships.forEach(function (r) {\n    g.setEdge(\n      entityNameIds.get(r.entityA),\n      entityNameIds.get(r.entityB),\n      { relationship: r },\n      getEdgeName(r)\n    );\n  });\n  return relationships;\n}; // addRelationships\n\nlet relCnt = 0;\n/**\n * Draw a relationship using edge information from the graph\n *\n * @param svg The svg node\n * @param rel The relationship to draw in the svg\n * @param g The graph containing the edge information\n * @param insert The insertion point in the svg DOM (because relationships have markers that need to\n *   sit 'behind' opaque entity boxes)\n * @param diagObj\n */\nconst drawRelationshipFromLayout = function (svg, rel, g, insert, diagObj) {\n  relCnt++;\n\n  // Find the edge relating to this relationship\n  const edge = g.edge(\n    entityNameIds.get(rel.entityA),\n    entityNameIds.get(rel.entityB),\n    getEdgeName(rel)\n  );\n\n  // Get a function that will generate the line path\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  // Insert the line at the right place\n  const svgPath = svg\n    .insert('path', '#' + insert)\n    .classed('er relationshipLine', true)\n    .attr('d', lineFunction(edge.points))\n    .style('stroke', conf.stroke)\n    .style('fill', 'none');\n\n  // ...and with dashes if necessary\n  if (rel.relSpec.relType === diagObj.db.Identification.NON_IDENTIFYING) {\n    svgPath.attr('stroke-dasharray', '8,8');\n  }\n\n  // TODO: Understand this better\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  // Decide which start and end markers it needs. It may be possible to be more concise here\n  // by reversing a start marker to make an end marker...but this will do for now\n\n  // Note that the 'A' entity's marker is at the end of the relationship and the 'B' entity's marker is at the start\n  switch (rel.relSpec.cardA) {\n    case diagObj.db.Cardinality.ZERO_OR_ONE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_ONE_END + ')');\n      break;\n    case diagObj.db.Cardinality.ZERO_OR_MORE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_MORE_END + ')');\n      break;\n    case diagObj.db.Cardinality.ONE_OR_MORE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ONE_OR_MORE_END + ')');\n      break;\n    case diagObj.db.Cardinality.ONLY_ONE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ONLY_ONE_END + ')');\n      break;\n  }\n\n  switch (rel.relSpec.cardB) {\n    case diagObj.db.Cardinality.ZERO_OR_ONE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_ONE_START + ')'\n      );\n      break;\n    case diagObj.db.Cardinality.ZERO_OR_MORE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_MORE_START + ')'\n      );\n      break;\n    case diagObj.db.Cardinality.ONE_OR_MORE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ONE_OR_MORE_START + ')'\n      );\n      break;\n    case diagObj.db.Cardinality.ONLY_ONE:\n      svgPath.attr('marker-start', 'url(' + url + '#' + erMarkers.ERMarkers.ONLY_ONE_START + ')');\n      break;\n  }\n\n  // Now label the relationship\n\n  // Find the half-way point\n  const len = svgPath.node().getTotalLength();\n  const labelPoint = svgPath.node().getPointAtLength(len * 0.5);\n\n  // Append a text node containing the label\n  const labelId = 'rel' + relCnt;\n\n  const labelNode = svg\n    .append('text')\n    .classed('er relationshipLabel', true)\n    .attr('id', labelId)\n    .attr('x', labelPoint.x)\n    .attr('y', labelPoint.y)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('font-family', getConfig().fontFamily)\n    .style('font-size', conf.fontSize + 'px')\n    .text(rel.roleA);\n\n  // Figure out how big the opaque 'container' rectangle needs to be\n  const labelBBox = labelNode.node().getBBox();\n\n  // Insert the opaque rectangle before the text label\n  svg\n    .insert('rect', '#' + labelId)\n    .classed('er relationshipLabelBox', true)\n    .attr('x', labelPoint.x - labelBBox.width / 2)\n    .attr('y', labelPoint.y - labelBBox.height / 2)\n    .attr('width', labelBBox.width)\n    .attr('height', labelBBox.height);\n};\n\n/**\n * Draw en E-R diagram in the tag with id: id based on the text definition of the diagram\n *\n * @param text The text of the diagram\n * @param id The unique id of the DOM node that contains the diagram\n * @param _version\n * @param diagObj\n */\nexport const draw = function (text, id, _version, diagObj) {\n  conf = getConfig().er;\n  log.info('Drawing ER diagram');\n  //  diag.db.clear();\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  // const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Parse the text to populate erDb\n  // try {\n  //   parser.parse(text);\n  // } catch (err) {\n  //   log.debug('Parsing failed');\n  // }\n\n  // Get a reference to the svg node that contains the text\n  const svg = root.select(`[id='${id}']`);\n\n  // Add cardinality marker definitions to the svg\n  erMarkers.insertMarkers(svg, conf);\n\n  // Now we have to construct the diagram in a specific way:\n  // ---\n  // 1. Create all the entities in the svg node at 0,0, but with the correct dimensions (allowing for text content)\n  // 2. Make sure they are all added to the graph\n  // 3. Add all the edges (relationships) to the graph as well\n  // 4. Let dagre do its magic to lay out the graph.  This assigns:\n  //    - the centre co-ordinates for each node, bearing in mind the dimensions and edge relationships\n  //    - the path co-ordinates for each edge\n  //    But it has no impact on the svg child nodes - the diagram remains with every entity rooted at 0,0\n  // 5. Now assign a transform to each entity in the svg node so that it gets drawn in the correct place, as determined by\n  //    its centre point, which is obtained from the graph, and it's width and height\n  // 6. And finally, create all the edges in the svg node using information from the graph\n  // ---\n\n  // Create the graph\n  let g;\n\n  // TODO: Explore directed vs undirected graphs, and how the layout is affected\n  // An E-R diagram could be said to be undirected, but there is merit in setting\n  // the direction from parent to child in a one-to-many as this influences graphlib to\n  // put the parent above the child (does it?), which is intuitive.  Most relationships\n  // in ER diagrams are one-to-many.\n  g = new graphlib.Graph({\n    multigraph: true,\n    directed: true,\n    compound: false,\n  })\n    .setGraph({\n      rankdir: conf.layoutDirection,\n      marginx: 20,\n      marginy: 20,\n      nodesep: 100,\n      edgesep: 100,\n      ranksep: 100,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  // Draw the entities (at 0,0), returning the first svg node that got\n  // inserted - this represents the insertion point for relationship paths\n  const firstEntity = drawEntities(svg, diagObj.db.getEntities(), g);\n\n  // TODO: externalize the addition of entities to the graph - it's a bit 'buried' in the above\n\n  // Add all the relationships to the graph\n  const relationships = addRelationships(diagObj.db.getRelationships(), g);\n\n  dagreLayout(g); // Node and edge positions will be updated\n\n  // Adjust the positions of the entities so that they adhere to the layout\n  adjustEntities(svg, g);\n\n  // Draw the relationships\n  relationships.forEach(function (rel) {\n    drawRelationshipFromLayout(svg, rel, g, firstEntity, diagObj);\n  });\n\n  const padding = conf.diagramPadding;\n\n  utils.insertTitle(svg, 'entityTitleText', conf.titleTopMargin, diagObj.db.getDiagramTitle());\n\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  svg.attr('viewBox', `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`);\n}; // draw\n\n/**\n * UUID namespace for ER diagram IDs\n *\n * This can be generated via running:\n *\n * ```js\n * const { v5: uuid5 } = await import('uuid');\n * uuid5(\n *   'https://mermaid-js.github.io/mermaid/syntax/entityRelationshipDiagram.html',\n *   uuid5.URL\n * );\n * ```\n */\nconst MERMAID_ERDIAGRAM_UUID = '28e9f9db-3c8d-5aa5-9faf-44286ae5937c';\n\n/**\n * Return a unique id based on the given string. Start with the prefix, then a hyphen, then the\n * simplified str, then a hyphen, then a unique uuid based on the str. (Hyphens are only included if needed.)\n * Although the official XML standard for ids says that many more characters are valid in the id,\n * this keeps things simple by accepting only A-Za-z0-9.\n *\n * @param {string} str Given string to use as the basis for the id. Default is `''`\n * @param {string} prefix String to put at the start, followed by '-'. Default is `''`\n * @returns {string}\n * @see https://www.w3.org/TR/xml/#NT-Name\n */\nexport function generateId(str = '', prefix = '') {\n  const simplifiedStr = str.replace(BAD_ID_CHARS_REGEXP, '');\n  // we use `uuid v5` so that UUIDs are consistent given a string.\n  return `${strWithHyphen(prefix)}${strWithHyphen(simplifiedStr)}${uuid5(\n    str,\n    MERMAID_ERDIAGRAM_UUID\n  )}`;\n}\n\n/**\n * Append a hyphen to a string only if the string isn't empty\n *\n * @param {string} str\n * @returns {string}\n * @todo This could be moved into a string utility file/class.\n */\nfunction strWithHyphen(str = '') {\n  return str.length > 0 ? `${str}-` : '';\n}\n\nexport default {\n  setConf,\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport erParser from './parser/erDiagram';\nimport erDb from './erDb';\nimport erRenderer from './erRenderer';\nimport erStyles from './styles';\n\nexport const diagram = {\n  parser: erParser,\n  db: erDb,\n  renderer: erRenderer,\n  styles: erStyles,\n};\n","const getStyles = (options) =>\n  `\n  .entityBox {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n  }\n\n  .attributeBoxOdd {\n    fill: ${options.attributeBackgroundColorOdd};\n    stroke: ${options.nodeBorder};\n  }\n\n  .attributeBoxEven {\n    fill:  ${options.attributeBackgroundColorEven};\n    stroke: ${options.nodeBorder};\n  }\n\n  .relationshipLabelBox {\n    fill: ${options.tertiaryColor};\n    opacity: 0.7;\n    background-color: ${options.tertiaryColor};\n      rect {\n        opacity: 0.5;\n      }\n  }\n\n    .relationshipLine {\n      stroke: ${options.lineColor};\n    }\n\n  .entityTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }    \n`;\n\nexport default getStyles;\n"],"names":["byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","toLowerCase","uuid","REGEX","test","validate","TypeError","v","Uint8Array","parseInt","f","s","x","y","z","ROTL","n","name","version","hashfunc","generateUUID","value","namespace","buf","_namespace","str","unescape","encodeURIComponent","bytes","charCodeAt","stringToBytes","parse","set","err","DNS","URL","v35","K","H","msg","Array","isArray","prototype","call","l","N","Math","ceil","M","Uint32Array","j","pow","floor","W","t","a","b","c","d","e","T","parser","o","k","o2","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","addEntity","addRelationship","addAttributes","trim","setAccTitle","setAccDescription","replace","attributeType","attributeName","attributeKeyTypeList","attributeComment","cardA","relType","cardB","Cardinality","ZERO_OR_ONE","ZERO_OR_MORE","ONE_OR_MORE","ONLY_ONE","Identification","NON_IDENTIFYING","IDENTIFYING","parseDirective","table","defaultActions","parseError","hash","recoverable","error","Error","input","self","stack","tstack","vstack","lstack","args","lexer2","Object","create","lexer","sharedState","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","lex","token","pop","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","erParser","entities","relationships","attributes","log","info","erDb","statement","context","type","mermaidAPI","this","getConfig","er","entityName","attribs","entity","debug","getEntities","entA","rolA","entB","rSpec","rel","entityA","roleA","entityB","relSpec","getRelationships","clear","clear$1","getAccTitle","g","getAccDescription","setDiagramTitle","getDiagramTitle","ERMarkers","ONLY_ONE_START","ONLY_ONE_END","ZERO_OR_ONE_START","ZERO_OR_ONE_END","ONE_OR_MORE_START","ONE_OR_MORE_END","ZERO_OR_MORE_START","ZERO_OR_MORE_END","erMarkers","elem","conf2","marker","append","attr","stroke","BAD_ID_CHARS_REGEXP","conf","entityNameIds","Map","drawEntities","svgNode","entities2","graph","firstOne","keys","forEach","entityId","prefix","simplifiedStr","strWithHyphen","v5","MERMAID_ERDIAGRAM_UUID","generateId","groupNode","textId","textNode","classed","style","fontFamily","fontSize","width","entityWidth","height","entityHeight","drawAttributes","entityTextNode","heightPadding","entityPadding","widthPadding","attrFontSize","labelBBox","node","getBBox","attributeNodes","hasKeyType","hasComment","maxTypeWidth","maxNameWidth","maxKeyWidth","maxCommentWidth","cumulativeHeight","attrNum","item","attrPrefix","id","nodeHeight","parseGenericTypes","typeNode","nameNode","attributeNode","tn","nn","typeBBox","nameBBox","max","keyTypeNodeText","keyTypeNode","kn","keyTypeBBox","commentNode","cn","commentNodeBBox","widthPaddingFactor","maxWidth","bBox","minEntityWidth","minEntityHeight","spareColumnWidth","heightOffset","attribStyle","alignY","typeRect","insert","nameXOffset","parseFloat","nameRect","keyTypeAndCommentXOffset","keyTypeRect","rectBBox","setNode","shape","getEdgeName","relCnt","diagram","db","renderer","setConf","cnf","key","draw","_version","diagObj","securityLevel","sandboxElement","select","svg","nodes","contentDocument","body","graphlib","multigraph","directed","compound","setGraph","rankdir","layoutDirection","marginx","marginy","nodesep","edgesep","ranksep","setDefaultEdgeLabel","firstEntity","relationships2","setEdge","get","relationship","addRelationships","layout","edge","lineFunction","curve","curveBasis","svgPath","points","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","getTotalLength","labelPoint","getPointAtLength","labelId","drawRelationshipFromLayout","padding","diagramPadding","utils","insertTitle","titleTopMargin","svgBounds","configureSvgSize","useMaxWidth","styles","mainBkg","nodeBorder","attributeBackgroundColorOdd","attributeBackgroundColorEven","tertiaryColor","lineColor","textColor"],"sourceRoot":""}