{"version":3,"file":"static/js/281.4942e049.chunk.js","mappings":"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","sources":["../node_modules/mermaid/src/dagre-wrapper/markers.js","../node_modules/mermaid/src/dagre-wrapper/createLabel.js","../node_modules/mermaid/src/dagre-wrapper/shapes/util.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-ellipse.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-line.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-rect.js","../node_modules/mermaid/src/dagre-wrapper/intersect/index.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-node.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-circle.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-polygon.js","../node_modules/mermaid/src/dagre-wrapper/nodes.js","../node_modules/mermaid/src/dagre-wrapper/shapes/note.js","../node_modules/mermaid/src/dagre-wrapper/edges.js","../node_modules/mermaid/src/diagrams/class/svgDraw.js"],"sourcesContent":["/** Setup arrow head and define the marker. The result is appended to the svg. */\n\nimport { log } from '../logger';\n\n// Only add the number of markers that the diagram needs\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\n\nconst extension = (elem, type, id) => {\n  log.trace('Making markers for ', id);\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionStart')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,7 L18,13 V 1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionEnd')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,1 V 13 L18,7 Z'); // this is actual shape for arrowhead\n};\n\nconst composition = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionStart')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionEnd')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst aggregation = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationStart')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationEnd')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst dependency = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyStart')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyEnd')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\nconst lollipop = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-lollipopStart')\n    .attr('class', 'marker lollipop ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('stroke', 'black')\n    .attr('fill', 'white')\n    .attr('cx', 6)\n    .attr('cy', 7)\n    .attr('r', 6);\n};\nconst point = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-pointEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 12 20')\n    .attr('refX', 10)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  elem\n    .append('marker')\n    .attr('id', type + '-pointStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 0)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 5 L 10 10 L 10 0 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst circle = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-circleEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 11)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-circleStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', -1)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst cross = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-crossEnd')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', 12)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-crossStart')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', -1)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n};\nconst barb = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-barbEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 14)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n// TODO rename the class diagram markers to something shape descriptive and semantic free\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle,\n  cross,\n  barb,\n};\nexport default insertMarkers;\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { getConfig } from '../config';\nimport { evaluate } from '../diagrams/common/common';\nimport { decodeEntities } from '../mermaidAPI';\n\n/**\n * @param dom\n * @param styleFn\n */\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\n/**\n * @param {any} node\n * @returns {SVGForeignObjectElement} Node\n */\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject'));\n  const div = fo.append('xhtml:div');\n\n  const label = node.label;\n  const labelClass = node.isNode ? 'nodeLabel' : 'edgeLabel';\n  div.html(\n    '<span class=\"' +\n      labelClass +\n      '\" ' +\n      (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : '') +\n      '>' +\n      label +\n      '</span>'\n  );\n\n  applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n  return fo.node();\n}\n\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || '';\n  if (typeof vertexText === 'object') {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n    vertexText = vertexText.replace(/\\\\n|\\n/g, '<br />');\n    log.info('vertexText' + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(':', ' ')}'></i>`\n      ),\n      labelStyle: style.replace('fill:', 'color:'),\n    };\n    let vertexNode = addHtmlLabel(node);\n    // vertexNode.parentNode.removeChild(vertexNode);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    svgLabel.setAttribute('style', style.replace('color:', 'fill:'));\n    let rows = [];\n    if (typeof vertexText === 'string') {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n\n    for (const row of rows) {\n      const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n      tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n      tspan.setAttribute('dy', '1em');\n      tspan.setAttribute('x', '0');\n      if (isTitle) {\n        tspan.setAttribute('class', 'title-row');\n      } else {\n        tspan.setAttribute('class', 'row');\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\n\nexport default createLabel;\n","import createLabel from '../createLabel';\nimport { getConfig } from '../../config';\nimport { decodeEntities } from '../../mermaidAPI';\nimport { select } from 'd3';\nimport { evaluate, sanitizeText } from '../../diagrams/common/common';\nexport const labelHelper = (parent, node, _classes, isNode) => {\n  let classes;\n  if (!_classes) {\n    classes = 'node default';\n  } else {\n    classes = _classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'label').attr('style', node.labelStyle);\n\n  // Replace labelText with default value if undefined\n  let labelText;\n  if (node.labelText === undefined) {\n    labelText = '';\n  } else {\n    labelText = typeof node.labelText === 'string' ? node.labelText : node.labelText[0];\n  }\n\n  const text = label\n    .node()\n    .appendChild(\n      createLabel(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n\n  const halfPadding = node.padding / 2;\n\n  // Center the label\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  return { shapeSvg, bbox, halfPadding, label };\n};\n\nexport const updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nexport function insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('class', 'label-container')\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n","/**\n * @param node\n * @param rx\n * @param ry\n * @param point\n */\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: https://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\nexport default intersectEllipse;\n","/**\n * Returns the point at which two lines, p and q, intersect or returns undefined if they do not intersect.\n *\n * @param p1\n * @param p2\n * @param q1\n * @param q2\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\n/**\n * @param r1\n * @param r2\n */\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\nexport default intersectLine;\n","const intersectRect = (node, point) => {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // https://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n};\n\nexport default intersectRect;\n","/*\n * Borrowed with love from from dagre-d3. Many thanks to cpettitt!\n */\n\nimport node from './intersect-node.js';\nimport circle from './intersect-circle.js';\nimport ellipse from './intersect-ellipse.js';\nimport polygon from './intersect-polygon.js';\nimport rect from './intersect-rect.js';\n\nexport default {\n  node,\n  circle,\n  ellipse,\n  polygon,\n  rect,\n};\n","/**\n * @param node\n * @param point\n */\nfunction intersectNode(node, point) {\n  // console.info('Intersect Node');\n  return node.intersect(point);\n}\n\nexport default intersectNode;\n","import intersectEllipse from './intersect-ellipse';\n\n/**\n * @param node\n * @param rx\n * @param point\n */\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\nexport default intersectCircle;\n","/* eslint \"no-console\": off */\n\nimport intersectLine from './intersect-line';\n\nexport default intersectPolygon;\n\n/**\n * Returns the point ({x, y}) at which the point argument intersects with the node argument assuming\n * that it has the shape specified by polygon.\n *\n * @param node\n * @param polyPoints\n * @param point\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === 'function') {\n    polyPoints.forEach(function (entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    // console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { labelHelper, updateNodeBounds, insertPolygonShape } from './shapes/util';\nimport { getConfig } from '../config';\nimport intersect from './intersect/index.js';\nimport createLabel from './createLabel';\nimport note from './shapes/note';\nimport { parseMember } from '../diagrams/class/svgDraw';\nimport { evaluate } from '../diagrams/common/common';\n\nconst question = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n\n  log.info('Question main (Circle)');\n\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr('style', node.style);\n  updateNodeBounds(node, questionElem);\n\n  node.intersect = function (point) {\n    log.warn('Intersect called');\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst choice = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 },\n  ];\n\n  const choice = shapeSvg.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (d) {\n        return d.x + ',' + d.y;\n      })\n      .join(' ')\n  );\n  // center the circle around its coordinate\n  choice.attr('class', 'state-start').attr('r', 7).attr('width', 28).attr('height', 28);\n  node.width = 28;\n  node.height = 28;\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 14, point);\n  };\n\n  return shapeSvg;\n};\n\nconst hexagon = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr('style', node.style);\n  updateNodeBounds(node, hex);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_left_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n\n  node.width = w + h;\n  node.height = h;\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_right = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_left = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst inv_trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_right_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst cylinder = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const el = shapeSvg\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('style', node.style)\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    const pos = intersect.rect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n};\n\nconst rect = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  const totalWidth = bbox.width + node.padding;\n  const totalHeight = bbox.height + node.padding;\n  rect\n    .attr('class', 'basic label-container')\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', totalWidth)\n    .attr('height', totalHeight);\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst labelRect = (parent, node) => {\n  const { shapeSvg } = labelHelper(parent, node, 'label', true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // Hide the rect we are only after the label\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect.attr('width', totalWidth).attr('height', totalHeight);\n  shapeSvg.attr('class', 'label edgeLabel');\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\n/**\n * @param rect\n * @param borders\n * @param totalWidth\n * @param totalHeight\n */\nfunction applyNodePropertyBorders(rect, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length, 0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0, length);\n  };\n  if (borders.includes('t')) {\n    log.debug('add top border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('r')) {\n    log.debug('add right border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes('b')) {\n    log.debug('add bottom border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('l')) {\n    log.debug('add left border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect.attr('stroke-dasharray', strokeDashArray.join(' '));\n}\n\nconst rectWithTitle = (parent, node) => {\n  // const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes);\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  // const innerRect = shapeSvg.insert('rect');\n  const innerLine = shapeSvg.insert('line');\n\n  const label = shapeSvg.insert('g').attr('class', 'label');\n\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  // const text2 = typeof text2prim === 'object' ? text2prim[0] : text2prim;\n\n  let title = '';\n  if (typeof text2 === 'object') {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info('Label text abc79', title, text2, typeof text2 === 'object');\n\n  const text = label.node().appendChild(createLabel(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  log.info('Text 2', text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label\n    .node()\n    .appendChild(\n      createLabel(textRows.join ? textRows.join('<br/>') : textRows, node.labelStyle, true, true)\n    );\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  // bbox = label.getBBox();\n  // log.info(descr);\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n      ', ' +\n      (titleBox.height + halfPadding + 5) +\n      ')'\n  );\n  select(text).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n      ', ' +\n      0 +\n      ')'\n  );\n  // Get the size of the label\n\n  // Bounding box for title and text\n  bbox = label.node().getBBox();\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  innerLine\n    .attr('class', 'divider')\n    .attr('x1', -bbox.width / 2 - halfPadding)\n    .attr('x2', bbox.width / 2 + halfPadding)\n    .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n    .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst stadium = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n\n  // add the rect\n  const rect = shapeSvg\n    .insert('rect', ':first-child')\n    .attr('style', node.style)\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst circle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('Circle main');\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    log.info('Circle intersect', node, bbox.width / 2 + halfPadding, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point);\n  };\n\n  return shapeSvg;\n};\n\nconst doublecircle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const gap = 5;\n  const circleGroup = shapeSvg.insert('g', ':first-child');\n  const outerCircle = circleGroup.insert('circle');\n  const innerCircle = circleGroup.insert('circle');\n\n  // center the circle around its coordinate\n  outerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding + gap)\n    .attr('width', bbox.width + node.padding + gap * 2)\n    .attr('height', bbox.height + node.padding + gap * 2);\n\n  innerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('DoubleCircle main');\n\n  updateNodeBounds(node, outerCircle);\n\n  node.intersect = function (point) {\n    log.info('DoubleCircle intersect', node, bbox.width / 2 + halfPadding + gap, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point);\n  };\n\n  return shapeSvg;\n};\n\nconst subroutine = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst start = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  let width = 70;\n  let height = 10;\n\n  if (dir === 'LR') {\n    width = 10;\n    height = 70;\n  }\n\n  const shape = shapeSvg\n    .append('rect')\n    .attr('x', (-1 * width) / 2)\n    .attr('y', (-1 * height) / 2)\n    .attr('width', width)\n    .attr('height', height)\n    .attr('class', 'fork-join');\n\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst end = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const innerCircle = shapeSvg.insert('circle', ':first-child');\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  innerCircle.attr('class', 'state-end').attr('r', 5).attr('width', 10).attr('height', 10);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  const topLine = shapeSvg.insert('line');\n  const bottomLine = shapeSvg.insert('line');\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n\n  const labelContainer = shapeSvg.insert('g').attr('class', 'label');\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n\n  // 1. Create the labels\n  const interfaceLabelText = node.classData.annotations[0]\n    ? '«' + node.classData.annotations[0] + '»'\n    : '';\n  const interfaceLabel = labelContainer\n    .node()\n    .appendChild(createLabel(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr('width', interfaceBBox.width);\n    dv.attr('height', interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n\n  let classTitleString = node.classData.label;\n\n  if (node.classData.type !== undefined && node.classData.type !== '') {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += '&lt;' + node.classData.type + '&gt;';\n    } else {\n      classTitleString += '<' + node.classData.type + '>';\n    }\n  }\n  const classTitleLabel = labelContainer\n    .node()\n    .appendChild(createLabel(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr('class', 'classTitle');\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr('width', classTitleBBox.width);\n    dv.attr('height', classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          parsedText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  const classMethods = [];\n  node.classData.methods.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          displayText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n\n    classMethods.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  // 2. Position the labels\n\n  // position the interface label\n  if (hasInterface) {\n    let diffX = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      'transform',\n      'translate( ' + ((-1 * maxWidth) / 2 + diffX) + ', ' + (-1 * maxHeight) / 2 + ')'\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  // Position the class title label\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    'transform',\n    'translate( ' +\n      ((-1 * maxWidth) / 2 + diffX) +\n      ', ' +\n      ((-1 * maxHeight) / 2 + verticalPos) +\n      ')'\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n\n  topLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' +\n        -maxWidth / 2 +\n        ', ' +\n        ((-1 * maxHeight) / 2 + verticalPos + lineHeight / 2) +\n        ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  verticalPos += lineHeight;\n  bottomLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' + -maxWidth / 2 + ', ' + ((-1 * maxHeight) / 2 + verticalPos) + ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -maxWidth / 2 - halfPadding)\n    .attr('y', -(maxHeight / 2) - halfPadding)\n    .attr('width', maxWidth + node.padding)\n    .attr('height', maxHeight + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst shapes = {\n  rhombus: question,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box,\n};\n\nlet nodeElems = {};\n\nexport const insertNode = (elem, node, dir) => {\n  let newEl;\n  let el;\n\n  // Add link when appropriate\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === 'sandbox') {\n      target = '_top';\n    } else if (node.linkTarget) {\n      target = node.linkTarget || '_blank';\n    }\n    newEl = elem.insert('svg:a').attr('xlink:href', node.link).attr('target', target);\n    el = shapes[node.shape](newEl, node, dir);\n  } else {\n    el = shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr('title', node.tooltip);\n  }\n  if (node.class) {\n    el.attr('class', 'node default ' + node.class);\n  }\n\n  nodeElems[node.id] = newEl;\n\n  if (node.haveCallback) {\n    nodeElems[node.id].attr('class', nodeElems[node.id].attr('class') + ' clickable');\n  }\n  return newEl;\n};\nexport const setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nexport const clear = () => {\n  nodeElems = {};\n};\n\nexport const positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    'Transforming node',\n    node.diff,\n    node,\n    'translate(' + (node.x - node.width / 2 - 5) + ', ' + node.width / 2 + ')'\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      'transform',\n      'translate(' +\n        (node.x + diff - node.width / 2) +\n        ', ' +\n        (node.y - node.height / 2 - padding) +\n        ')'\n    );\n  } else {\n    el.attr('transform', 'translate(' + node.x + ', ' + node.y + ')');\n  }\n  return diff;\n};\n","import { updateNodeBounds, labelHelper } from './util';\nimport { log } from '../../logger';\nimport intersect from '../intersect/index.js';\n\nconst note = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.info('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  rect\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nexport default note;\n","import { log } from '../logger';\nimport createLabel from './createLabel';\nimport { line, curveBasis, select } from 'd3';\nimport { getConfig } from '../config';\nimport utils from '../utils';\nimport { evaluate } from '../diagrams/common/common';\n\nlet edgeLabels = {};\nlet terminalLabels = {};\n\nexport const clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\n\nexport const insertEdgeLabel = (elem, edge) => {\n  // Create the actual text element\n  const labelElement = createLabel(edge.label, edge.labelStyle);\n\n  // Create outer g, edgeLabel, this will be positioned after graph layout\n  const edgeLabel = elem.insert('g').attr('class', 'edgeLabel');\n\n  // Create inner g, label, this will be positioned now for centering the text\n  const label = edgeLabel.insert('g').attr('class', 'label');\n  label.node().appendChild(labelElement);\n\n  // Center the label\n  let bbox = labelElement.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  // Make element accessible by id for positioning\n  edgeLabels[edge.id] = edgeLabel;\n\n  // Update the abstract data of the edge with the new information about its width and height\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n\n  let fo;\n  if (edge.startLabelLeft) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelRight.insert('g').attr('class', 'inner');\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelRight.insert('g').attr('class', 'inner');\n\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n};\n\n/**\n * @param {any} fo\n * @param {any} value\n */\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + 'px';\n    fo.style.height = '12px';\n  }\n}\n\nexport const positionEdgeLabel = (edge, paths) => {\n  log.info('Moving label abc78 ', edge.id, edge.label, edgeLabels[edge.id]);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      //   // debugger;\n      const pos = utils.calcLabelPosition(path);\n      log.info(\n        'Moving label ' + edge.label + ' from (',\n        x,\n        ',',\n        y,\n        ') to (',\n        pos.x,\n        ',',\n        pos.y,\n        ') abc78'\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n\n  //let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, 'start_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        'start_right',\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_right', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n};\n\nconst outsideNode = (node, point) => {\n  // log.warn('Checking bounds ', node, point);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point.x - x);\n  const dy = Math.abs(point.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\n\nexport const intersection = (node, outsidePoint, insidePoint) => {\n  log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n\n  const dx = Math.abs(x - insidePoint.x);\n  // const dy = Math.abs(y - insidePoint.y);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n\n  // const edges = {\n  //   x1: x - w,\n  //   x2: x + w,\n  //   y1: y - h,\n  //   y2: y + h\n  // };\n\n  // if (\n  //   outsidePoint.x === edges.x1 ||\n  //   outsidePoint.x === edges.x2 ||\n  //   outsidePoint.y === edges.y1 ||\n  //   outsidePoint.y === edges.y2\n  // ) {\n  //   log.warn('abc89 calc equals on edge', outsidePoint, edges);\n  //   return outsidePoint;\n  // }\n\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  // log.warn();\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    // Intersection is top or bottom of rect.\n    // let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = (R * q) / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q,\n    };\n\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n\n    return res;\n  } else {\n    // Intersection onn sides of rect\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      // r = outsidePoint.x - w - x;\n      r = x - w - outsidePoint.x;\n    }\n    let q = (Q * r) / R;\n    //  OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x + dx - w;\n    // OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    // let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n\n    return { x: _x, y: _y };\n  }\n};\n/**\n * This function will page a path and node where the last point(s) in the path is inside the node\n * and return an update path ending by the border of the node.\n *\n * @param {Array} _points\n * @param {any} boundryNode\n * @returns {Array} Points\n */\nconst cutPathAtIntersect = (_points, boundryNode) => {\n  log.warn('abc88 cutPathAtIntersect', _points, boundryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point) => {\n    // const node = clusterDb[edge.toCluster].node;\n    log.info('abc88 checking point', point, boundryNode);\n\n    // check if point is inside the boundary rect\n    if (!outsideNode(boundryNode, point) && !isInside) {\n      // First point inside the rect found\n      // Calc the intersection coord between the point anf the last point outside the rect\n      const inter = intersection(boundryNode, lastPointOutside, point);\n      log.warn('abc88 inside', point, lastPointOutside, inter);\n      log.warn('abc88 intersection', inter);\n\n      // // Check case where the intersection is the same as the last point\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n      });\n      // // if (!pointPresent) {\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      } else {\n        log.warn('abc88 no intersect', inter, points);\n      }\n      // points.push(inter);\n      isInside = true;\n    } else {\n      // Outside\n      log.warn('abc88 outside', point, lastPointOutside);\n      lastPointOutside = point;\n      // points.push(point);\n      if (!isInside) {\n        points.push(point);\n      }\n    }\n  });\n  log.warn('abc88 returning points', points);\n  return points;\n};\n\n//(edgePaths, e, edge, clusterDb, diagramtype, graph)\nexport const insertEdge = function (elem, e, edge, clusterDb, diagramType, graph) {\n  let points = edge.points;\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n\n  log.info('abc88 InsertEdge: ', edge);\n  if (head.intersect && tail.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    log.info(\n      'Last point',\n      points[points.length - 1],\n      head,\n      head.intersect(points[points.length - 1])\n    );\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.info('to cluster abc88', clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    // log.trace('edge', edge);\n    // points = [];\n    // let lastPointOutside; // = edge.points[0];\n    // let isInside = false;\n    // edge.points.forEach(point => {\n    //   const node = clusterDb[edge.toCluster].node;\n    //   log.warn('checking from', edge.fromCluster, point, node);\n\n    //   if (!outsideNode(node, point) && !isInside) {\n    //     log.trace('inside', edge.toCluster, point, lastPointOutside);\n\n    //     // First point inside the rect\n    //     const inter = intersection(node, lastPointOutside, point);\n\n    //     let pointPresent = false;\n    //     points.forEach(p => {\n    //       pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n    //     });\n    //     // if (!pointPresent) {\n    //     if (!points.find(e => e.x === inter.x && e.y === inter.y)) {\n    //       points.push(inter);\n    //     } else {\n    //       log.warn('no intersect', inter, points);\n    //     }\n    //     isInside = true;\n    // } else {\n    //   // outside\n    //   lastPointOutside = point;\n    //   if (!isInside) points.push(point);\n    // }\n    // });\n    pointsHasChanged = true;\n  }\n\n  if (edge.fromCluster) {\n    log.info('from cluster abc88', clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n\n    pointsHasChanged = true;\n  }\n\n  // The data for our line\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n\n  // This is the accessor function we talked about above\n  let curve;\n  // Currently only flowcharts get the curve from the settings, perhaps this should\n  // be expanded to a common setting? Restricting it for now in order not to cause side-effects that\n  // have not been thought through\n  if (diagramType === 'graph' || diagramType === 'flowchart') {\n    curve = edge.curve || curveBasis;\n  } else {\n    curve = curveBasis;\n  }\n  // curve = curveLinear;\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curve);\n\n  // Construct stroke classes based on properties\n  let strokeClasses;\n  switch (edge.thickness) {\n    case 'normal':\n      strokeClasses = 'edge-thickness-normal';\n      break;\n    case 'thick':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    case 'invisible':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    default:\n      strokeClasses = '';\n  }\n  switch (edge.pattern) {\n    case 'solid':\n      strokeClasses += ' edge-pattern-solid';\n      break;\n    case 'dotted':\n      strokeClasses += ' edge-pattern-dotted';\n      break;\n    case 'dashed':\n      strokeClasses += ' edge-pattern-dashed';\n      break;\n  }\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', edge.id)\n    .attr('class', ' ' + strokeClasses + (edge.classes ? ' ' + edge.classes : ''))\n    .attr('style', edge.style);\n\n  // DEBUG code, adds a red circle at each edge coordinate\n  // edge.points.forEach((point) => {\n  //   elem\n  //     .append('circle')\n  //     .style('stroke', 'red')\n  //     .style('fill', 'red')\n  //     .attr('r', 1)\n  //     .attr('cx', point.x)\n  //     .attr('cy', point.y);\n  // });\n\n  let url = '';\n  // // TODO: Can we load this config only from the rendered graph type?\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n  log.info('arrowTypeStart', edge.arrowTypeStart);\n  log.info('arrowTypeEnd', edge.arrowTypeEnd);\n\n  switch (edge.arrowTypeStart) {\n    case 'arrow_cross':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-crossStart' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-pointStart' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-barbStart' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-circleStart' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-aggregationStart' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-extensionStart' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-compositionStart' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-dependencyStart' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-lollipopStart' + ')');\n      break;\n    default:\n  }\n  switch (edge.arrowTypeEnd) {\n    case 'arrow_cross':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-crossEnd' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-pointEnd' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-barbEnd' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-circleEnd' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-aggregationEnd' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-extensionEnd' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-compositionEnd' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-dependencyEnd' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-lollipopEnd' + ')');\n      break;\n    default:\n  }\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\n","import { line, curveBasis } from 'd3';\nimport utils from '../../utils';\nimport { log } from '../../logger';\nimport { parseGenericTypes } from '../common/common';\n\nlet edgeCount = 0;\nexport const drawEdge = function (elem, path, relation, conf, diagObj) {\n  const getRelationType = function (type) {\n    switch (type) {\n      case diagObj.db.relationType.AGGREGATION:\n        return 'aggregation';\n      case diagObj.db.relationType.EXTENSION:\n        return 'extension';\n      case diagObj.db.relationType.COMPOSITION:\n        return 'composition';\n      case diagObj.db.relationType.DEPENDENCY:\n        return 'dependency';\n      case diagObj.db.relationType.LOLLIPOP:\n        return 'lollipop';\n    }\n  };\n\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n\n  // The data for our line\n  const lineData = path.points;\n\n  // This is the accessor function we talked about above\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', 'edge' + edgeCount)\n    .attr('class', 'relation');\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  if (relation.relation.lineType == 1) {\n    svgPath.attr('class', 'relation dashed-line');\n  }\n  if (relation.relation.lineType == 10) {\n    svgPath.attr('class', 'relation dotted-line');\n  }\n  if (relation.relation.type1 !== 'none') {\n    svgPath.attr(\n      'marker-start',\n      'url(' + url + '#' + getRelationType(relation.relation.type1) + 'Start' + ')'\n    );\n  }\n  if (relation.relation.type2 !== 'none') {\n    svgPath.attr(\n      'marker-end',\n      'url(' + url + '#' + getRelationType(relation.relation.type2) + 'End' + ')'\n    );\n  }\n\n  let x, y;\n  const l = path.points.length;\n  // Calculate Label position\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== 'none',\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== 'none',\n      path.points,\n      path.points[l - 1]\n    );\n\n    log.debug('cardinality_1_point ' + JSON.stringify(cardinality_1_point));\n    log.debug('cardinality_2_point ' + JSON.stringify(cardinality_2_point));\n\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n\n  if (relation.title !== undefined) {\n    const g = elem.append('g').attr('class', 'classLabel');\n    const label = g\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('fill', 'red')\n      .attr('text-anchor', 'middle')\n      .text(relation.title);\n\n    window.label = label;\n    const bounds = label.node().getBBox();\n\n    g.insert('rect', ':first-child')\n      .attr('class', 'box')\n      .attr('x', bounds.x - conf.padding / 2)\n      .attr('y', bounds.y - conf.padding / 2)\n      .attr('width', bounds.width + conf.padding)\n      .attr('height', bounds.height + conf.padding);\n  }\n\n  log.info('Rendering relation ' + JSON.stringify(relation));\n  if (relation.relationTitle1 !== undefined && relation.relationTitle1 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type1')\n      .attr('x', p1_card_x)\n      .attr('y', p1_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle1);\n  }\n  if (relation.relationTitle2 !== undefined && relation.relationTitle2 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type2')\n      .attr('x', p2_card_x)\n      .attr('y', p2_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle2);\n  }\n\n  edgeCount++;\n};\n\n/**\n * Renders a class diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param classDef\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawClass = function (elem, classDef, conf, diagObj) {\n  log.debug('Rendering class ', classDef, conf);\n\n  const id = classDef.id;\n  const classInfo = {\n    id: id,\n    label: classDef.id,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', diagObj.db.lookUpDomId(id)).attr('class', 'classGroup');\n\n  // add title\n  let title;\n  if (classDef.link) {\n    title = g\n      .append('svg:a')\n      .attr('xlink:href', classDef.link)\n      .attr('target', classDef.linkTarget)\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  } else {\n    title = g\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  }\n\n  // add annotations\n  let isFirst = true;\n  classDef.annotations.forEach(function (member) {\n    const titleText2 = title.append('tspan').text('«' + member + '»');\n    if (!isFirst) {\n      titleText2.attr('dy', conf.textHeight);\n    }\n    isFirst = false;\n  });\n\n  let classTitleString = classDef.id;\n\n  if (classDef.type !== undefined && classDef.type !== '') {\n    classTitleString += '<' + classDef.type + '>';\n  }\n\n  const classTitle = title.append('tspan').text(classTitleString).attr('class', 'title');\n\n  // If class has annotations the title needs to have an offset of the text height\n  if (!isFirst) {\n    classTitle.attr('dy', conf.textHeight);\n  }\n\n  const titleHeight = title.node().getBBox().height;\n\n  const membersLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin / 2)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin / 2);\n\n  const members = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + conf.dividerMargin + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n  classDef.members.forEach(function (member) {\n    addTspan(members, member, isFirst, conf);\n    isFirst = false;\n  });\n\n  const membersBox = members.node().getBBox();\n\n  const methodsLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin + membersBox.height)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n\n  const methods = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n\n  classDef.methods.forEach(function (method) {\n    addTspan(methods, method, isFirst, conf);\n    isFirst = false;\n  });\n\n  const classBox = g.node().getBBox();\n  var cssClassStr = ' ';\n\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(' ');\n  }\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', classBox.width + 2 * conf.padding)\n    .attr('height', classBox.height + conf.padding + 0.5 * conf.dividerMargin)\n    .attr('class', cssClassStr);\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  title.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  if (classDef.tooltip) {\n    title.insert('title').text(classDef.tooltip);\n  }\n\n  membersLine.attr('x2', rectWidth);\n  methodsLine.attr('x2', rectWidth);\n\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n\n  return classInfo;\n};\n\n/**\n * Renders a note diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param {{id: string; text: string; class: string;}} note\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawNote = function (elem, note, conf, diagObj) {\n  log.debug('Rendering note ', note, conf);\n\n  const id = note.id;\n  const noteInfo = {\n    id: id,\n    text: note.text,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', id).attr('class', 'classGroup');\n\n  // add text\n  let text = g\n    .append('text')\n    .attr('y', conf.textHeight + conf.padding)\n    .attr('x', 0);\n\n  const lines = JSON.parse(`\"${note.text}\"`).split('\\n');\n\n  lines.forEach(function (line) {\n    log.debug(`Adding line: ${line}`);\n    text.append('tspan').text(line).attr('class', 'title').attr('dy', conf.textHeight);\n  });\n\n  const noteBox = g.node().getBBox();\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', noteBox.width + 2 * conf.padding)\n    .attr(\n      'height',\n      noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin\n    );\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  text.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  noteInfo.width = rectWidth;\n  noteInfo.height =\n    noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin;\n\n  return noteInfo;\n};\n\nexport const parseMember = function (text) {\n  const fieldRegEx = /^([#+~-])?(\\w+)(~\\w+~|\\[])?\\s+(\\w+) *([$*])?$/;\n  const methodRegEx = /^([#+|~-])?(\\w+) *\\( *(.*)\\) *([$*])? *(\\w*[[\\]|~]*\\s*\\w*~?)$/;\n\n  let fieldMatch = text.match(fieldRegEx);\n  let methodMatch = text.match(methodRegEx);\n\n  if (fieldMatch && !methodMatch) {\n    return buildFieldDisplay(fieldMatch);\n  } else if (methodMatch) {\n    return buildMethodDisplay(methodMatch);\n  } else {\n    return buildLegacyDisplay(text);\n  }\n};\n\nconst buildFieldDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let fieldType = parsedText[2] ? parsedText[2].trim() : '';\n    let genericType = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let fieldName = parsedText[4] ? parsedText[4].trim() : '';\n    let classifier = parsedText[5] ? parsedText[5].trim() : '';\n\n    displayText = visibility + fieldType + genericType + ' ' + fieldName;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildMethodDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let methodName = parsedText[2] ? parsedText[2].trim() : '';\n    let parameters = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let classifier = parsedText[4] ? parsedText[4].trim() : '';\n    let returnType = parsedText[5] ? ' : ' + parseGenericTypes(parsedText[5]).trim() : '';\n\n    displayText = visibility + methodName + '(' + parameters + ')' + returnType;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildLegacyDisplay = function (text) {\n  // if for some reason we don't have any match, use old format to parse text\n  let displayText = '';\n  let cssStyle = '';\n  let returnType = '';\n  let methodStart = text.indexOf('(');\n  let methodEnd = text.indexOf(')');\n\n  if (methodStart > 1 && methodEnd > methodStart && methodEnd <= text.length) {\n    let visibility = '';\n    let methodName = '';\n\n    let firstChar = text.substring(0, 1);\n    if (firstChar.match(/\\w/)) {\n      methodName = text.substring(0, methodStart).trim();\n    } else {\n      if (firstChar.match(/[#+~-]/)) {\n        visibility = firstChar;\n      }\n\n      methodName = text.substring(1, methodStart).trim();\n    }\n\n    const parameters = text.substring(methodStart + 1, methodEnd);\n    const classifier = text.substring(methodEnd + 1, 1);\n    cssStyle = parseClassifier(text.substring(methodEnd + 1, methodEnd + 2));\n\n    displayText = visibility + methodName + '(' + parseGenericTypes(parameters.trim()) + ')';\n\n    if (methodEnd < text.length) {\n      returnType = text.substring(methodEnd + 2).trim();\n      if (returnType !== '') {\n        returnType = ' : ' + parseGenericTypes(returnType);\n        displayText += returnType;\n      }\n    }\n  } else {\n    // finally - if all else fails, just send the text back as written (other than parsing for generic types)\n    displayText = parseGenericTypes(text);\n  }\n\n  return {\n    displayText,\n    cssStyle,\n  };\n};\n/**\n * Adds a <tspan> for a member in a diagram\n *\n * @param {SVGElement} textEl The element to append to\n * @param {string} txt The member\n * @param {boolean} isFirst\n * @param {{ padding: string; textHeight: string }} conf The configuration for the member\n */\nconst addTspan = function (textEl, txt, isFirst, conf) {\n  let member = parseMember(txt);\n\n  const tSpan = textEl.append('tspan').attr('x', conf.padding).text(member.displayText);\n\n  if (member.cssStyle !== '') {\n    tSpan.attr('style', member.cssStyle);\n  }\n\n  if (!isFirst) {\n    tSpan.attr('dy', conf.textHeight);\n  }\n};\n\n/**\n * Gives the styles for a classifier\n *\n * @param {'+' | '-' | '#' | '~' | '*' | '$'} classifier The classifier string\n * @returns {string} Styling for the classifier\n */\nconst parseClassifier = function (classifier) {\n  switch (classifier) {\n    case '*':\n      return 'font-style:italic;';\n    case '$':\n      return 'text-decoration:underline;';\n    default:\n      return '';\n  }\n};\n\nexport default {\n  drawClass,\n  drawEdge,\n  drawNote,\n  parseMember,\n};\n"],"names":["markers","extension","elem","type","id","log","trace","append","attr","composition","aggregation","dependency","lollipop","point","style","circle","cross","barb","insertMarkers$1","insertMarkers","markerArray","forEach","markerName","createLabel$1","createLabel","_vertexText","isTitle","isNode","vertexText","evaluate","getConfig","flowchart","htmlLabels","replace","info","vertexNode","node","fo","select","document","createElementNS","div","label","labelClass","dom","styleFn","html","labelStyle","addHtmlLabel","decodeEntities","s","concat","svgLabel","setAttribute","rows","split","Array","isArray","row","tspan","setAttributeNS","textContent","trim","appendChild","labelHelper","parent","_classes","classes","shapeSvg","insert","domId","labelText","text","sanitizeText","bbox","getBBox","children","dv","getBoundingClientRect","width","height","halfPadding","padding","updateNodeBounds","element","insertPolygonShape","w","h","points","map","d","x","y","join","intersectEllipse","rx","ry","point2","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","intersectRect$1","intersectRect","sx","sy","intersect","ellipse","polygon","polyPoints","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","entry","min","left","top","i","length","intersect2","push","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","rect","question","questionElem","warn","applyNodePropertyBorders","rect2","borders","totalWidth","totalHeight","strokeDashArray","addBorder","skipBorder","includes","debug","forkJoin","dir","shape","shapes","rhombus","props","propKeys","Set","Object","keys","delete","propKey","labelRect","rectWithTitle","innerLine","text2","flat","title","textRows","slice","titleBox","descr","choice","circle2","doublecircle","circleGroup","outerCircle","innerCircle","gap","stadium","hexagon","m","hex","rect_left_inv_arrow","lean_right","el","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","cylinder","pos","start","end","note","subroutine","fork","class_box","topLine","bottomLine","maxWidth","maxHeight","labelContainer","verticalPos","hasInterface","classData","annotations","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","members","str","parsedInfo","parseMember","parsedText","displayText","lbl","cssStyle","classMethods","methods","diffX2","diffX","lineHeight","nodeElems","insertNode","newEl","link","target","securityLevel","linkTarget","tooltip","class","haveCallback","setNodeElem","clear$1","clear","positionNode","diff","clusterNode","edgeLabels","terminalLabels","insertEdgeLabel","edge","labelElement","edgeLabel","startLabelLeft","startLabelElement","startEdgeLabelLeft","inner","slBox","startLeft","setTerminalWidth","startLabelRight","startEdgeLabelRight","startRight","endLabelLeft","endLabelElement","endEdgeLabelLeft","endLeft","endLabelRight","endEdgeLabelRight","endRight","value","positionEdgeLabel","paths","path","updatedPath","originalPath","utils","calcLabelPosition","calcTerminalLabelPosition","arrowTypeStart","arrowTypeEnd","cutPathAtIntersect","_points","boundryNode","lastPointOutside","isInside","outsideNode","inter","intersection","outsidePoint","insidePoint","JSON","stringify","r","Q","R","res","_x","_y","pointPresent","some","e","insertEdge","clusterDb","diagramType","graph","pointsHasChanged","tail","v","head","unshift","toCluster","fromCluster","reverse","lineData","filter","isNaN","curve","curveBasis","lineFunction","line","strokeClasses","thickness","pattern","svgPath","url","arrowMarkerAbsolute","state","window","location","protocol","host","pathname","search","edgeCount","fieldMatch","match","methodMatch","buildFieldDisplay","buildMethodDisplay","buildLegacyDisplay","visibility","fieldType","genericType","parseGenericTypes","fieldName","classifier","parseClassifier","err","methodName","parameters","returnType","methodStart","indexOf","methodEnd","firstChar","substring","addTspan","textEl","txt","isFirst","conf","member","tSpan","textHeight","svgDraw","drawClass","classDef","diagObj","classInfo","g","db","lookUpDomId","titleText2","classTitle","titleHeight","membersLine","dividerMargin","membersBox","methodsLine","method","classBox","cssClassStr","cssClasses","rectWidth","childNodes","drawEdge","relation","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","LOLLIPOP","lineType","type1","type2","l","p1_card_x","p1_card_y","p2_card_x","p2_card_y","labelPosition","cardinality_1_point","calcCardinalityPosition","cardinality_2_point","bounds","relationTitle1","relationTitle2","drawNote","noteInfo","lines","parse","line2","noteBox"],"sourceRoot":""}