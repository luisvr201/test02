"use strict";(self.webpackChunkauto_mindmapping=self.webpackChunkauto_mindmapping||[]).push([[678],{5678:(t,e,c)=>{c.d(e,{diagram:()=>z});var i=c(2954),r=c(5178),n=c(6009),a=c(8586),s=c(9836),o=(c(8703),c(7892),c(504),function(){var t=function(t,e,c,i){for(c=c||{},i=t.length;i--;c[t[i]]=e);return c},e=[1,4],c=[1,7],i=[1,5],r=[1,9],n=[1,6],a=[2,6],s=[1,16],o=[6,8,14,20,22,24,25,27,29,32,37,40,50,55],l=[8,14,20,22,24,25,27,29,32,37,40],h=[8,13,14,20,22,24,25,27,29,32,37,40],m=[1,26],u=[6,8,14,50,55],y=[8,14,55],p=[1,53],g=[1,52],d=[8,14,30,33,35,38,55],b=[1,67],f=[1,68],k=[1,69],_=[8,14,33,35,42,55],x={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,directive:5,GG:6,document:7,EOF:8,":":9,DIR:10,options:11,body:12,OPT:13,NL:14,line:15,statement:16,commitStatement:17,mergeStatement:18,cherryPickStatement:19,acc_title:20,acc_title_value:21,acc_descr:22,acc_descr_value:23,acc_descr_multiline_value:24,section:25,branchStatement:26,CHECKOUT:27,ref:28,BRANCH:29,ORDER:30,NUM:31,CHERRY_PICK:32,COMMIT_ID:33,STR:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,openDirective:46,typeDirective:47,closeDirective:48,argDirective:49,open_directive:50,type_directive:51,arg_directive:52,close_directive:53,ID:54,";":55,$accept:0,$end:1},terminals_:{2:"error",6:"GG",8:"EOF",9:":",10:"DIR",13:"OPT",14:"NL",20:"acc_title",21:"acc_title_value",22:"acc_descr",23:"acc_descr_value",24:"acc_descr_multiline_value",25:"section",27:"CHECKOUT",29:"BRANCH",30:"ORDER",31:"NUM",32:"CHERRY_PICK",33:"COMMIT_ID",34:"STR",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",50:"open_directive",51:"type_directive",52:"arg_directive",53:"close_directive",54:"ID",55:";"},productions_:[0,[3,2],[3,2],[3,3],[3,4],[3,5],[7,0],[7,2],[11,2],[11,1],[12,0],[12,2],[15,2],[15,1],[16,1],[16,1],[16,1],[16,2],[16,2],[16,1],[16,1],[16,1],[16,2],[26,2],[26,4],[19,3],[19,5],[19,5],[19,5],[19,5],[18,2],[18,4],[18,4],[18,4],[18,6],[18,6],[18,6],[18,6],[18,6],[18,6],[18,8],[18,8],[18,8],[18,8],[18,8],[18,8],[17,2],[17,3],[17,3],[17,5],[17,5],[17,3],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,3],[17,5],[17,5],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[41,0],[41,1],[39,1],[39,1],[39,1],[5,3],[5,5],[46,1],[47,1],[49,1],[48,1],[28,1],[28,1],[4,1],[4,1],[4,1]],performAction:function(t,e,c,i,r,n,a){var s=n.length-1;switch(r){case 3:return n[s];case 4:return n[s-1];case 5:return i.setDirection(n[s-3]),n[s-1];case 7:i.setOptions(n[s-1]),this.$=n[s];break;case 8:n[s-1]+=n[s],this.$=n[s-1];break;case 10:this.$=[];break;case 11:n[s-1].push(n[s]),this.$=n[s-1];break;case 12:this.$=n[s-1];break;case 17:this.$=n[s].trim(),i.setAccTitle(this.$);break;case 18:case 19:this.$=n[s].trim(),i.setAccDescription(this.$);break;case 20:i.addSection(n[s].substr(8)),this.$=n[s].substr(8);break;case 22:i.checkout(n[s]);break;case 23:i.branch(n[s]);break;case 24:i.branch(n[s-2],n[s]);break;case 25:i.cherryPick(n[s],"",void 0);break;case 26:i.cherryPick(n[s-2],"",n[s]);break;case 27:case 29:i.cherryPick(n[s-2],"","");break;case 28:i.cherryPick(n[s],"",n[s-2]);break;case 30:i.merge(n[s],"","","");break;case 31:i.merge(n[s-2],n[s],"","");break;case 32:i.merge(n[s-2],"",n[s],"");break;case 33:i.merge(n[s-2],"","",n[s]);break;case 34:i.merge(n[s-4],n[s],"",n[s-2]);break;case 35:i.merge(n[s-4],"",n[s],n[s-2]);break;case 36:i.merge(n[s-4],"",n[s-2],n[s]);break;case 37:i.merge(n[s-4],n[s-2],n[s],"");break;case 38:i.merge(n[s-4],n[s-2],"",n[s]);break;case 39:i.merge(n[s-4],n[s],n[s-2],"");break;case 40:i.merge(n[s-6],n[s-4],n[s-2],n[s]);break;case 41:i.merge(n[s-6],n[s],n[s-4],n[s-2]);break;case 42:i.merge(n[s-6],n[s-4],n[s],n[s-2]);break;case 43:i.merge(n[s-6],n[s-2],n[s-4],n[s]);break;case 44:i.merge(n[s-6],n[s],n[s-2],n[s-4]);break;case 45:i.merge(n[s-6],n[s-2],n[s],n[s-4]);break;case 46:i.commit(n[s]);break;case 47:i.commit("","",i.commitType.NORMAL,n[s]);break;case 48:i.commit("","",n[s],"");break;case 49:i.commit("","",n[s],n[s-2]);break;case 50:i.commit("","",n[s-2],n[s]);break;case 51:i.commit("",n[s],i.commitType.NORMAL,"");break;case 52:i.commit("",n[s-2],i.commitType.NORMAL,n[s]);break;case 53:i.commit("",n[s],i.commitType.NORMAL,n[s-2]);break;case 54:i.commit("",n[s-2],n[s],"");break;case 55:i.commit("",n[s],n[s-2],"");break;case 56:i.commit("",n[s-4],n[s-2],n[s]);break;case 57:i.commit("",n[s-4],n[s],n[s-2]);break;case 58:i.commit("",n[s-2],n[s-4],n[s]);break;case 59:i.commit("",n[s],n[s-4],n[s-2]);break;case 60:i.commit("",n[s],n[s-2],n[s-4]);break;case 61:i.commit("",n[s-2],n[s],n[s-4]);break;case 62:i.commit(n[s],"",i.commitType.NORMAL,"");break;case 63:i.commit(n[s],"",i.commitType.NORMAL,n[s-2]);break;case 64:i.commit(n[s-2],"",i.commitType.NORMAL,n[s]);break;case 65:i.commit(n[s-2],"",n[s],"");break;case 66:i.commit(n[s],"",n[s-2],"");break;case 67:i.commit(n[s],n[s-2],i.commitType.NORMAL,"");break;case 68:i.commit(n[s-2],n[s],i.commitType.NORMAL,"");break;case 69:i.commit(n[s-4],"",n[s-2],n[s]);break;case 70:i.commit(n[s-4],"",n[s],n[s-2]);break;case 71:i.commit(n[s-2],"",n[s-4],n[s]);break;case 72:i.commit(n[s],"",n[s-4],n[s-2]);break;case 73:i.commit(n[s],"",n[s-2],n[s-4]);break;case 74:i.commit(n[s-2],"",n[s],n[s-4]);break;case 75:i.commit(n[s-4],n[s],n[s-2],"");break;case 76:i.commit(n[s-4],n[s-2],n[s],"");break;case 77:i.commit(n[s-2],n[s],n[s-4],"");break;case 78:i.commit(n[s],n[s-2],n[s-4],"");break;case 79:i.commit(n[s],n[s-4],n[s-2],"");break;case 80:i.commit(n[s-2],n[s-4],n[s],"");break;case 81:i.commit(n[s-4],n[s],i.commitType.NORMAL,n[s-2]);break;case 82:i.commit(n[s-4],n[s-2],i.commitType.NORMAL,n[s]);break;case 83:i.commit(n[s-2],n[s],i.commitType.NORMAL,n[s-4]);break;case 84:i.commit(n[s],n[s-2],i.commitType.NORMAL,n[s-4]);break;case 85:i.commit(n[s],n[s-4],i.commitType.NORMAL,n[s-2]);break;case 86:i.commit(n[s-2],n[s-4],i.commitType.NORMAL,n[s]);break;case 87:i.commit(n[s-6],n[s-4],n[s-2],n[s]);break;case 88:i.commit(n[s-6],n[s-4],n[s],n[s-2]);break;case 89:i.commit(n[s-6],n[s-2],n[s-4],n[s]);break;case 90:i.commit(n[s-6],n[s],n[s-4],n[s-2]);break;case 91:i.commit(n[s-6],n[s-2],n[s],n[s-4]);break;case 92:i.commit(n[s-6],n[s],n[s-2],n[s-4]);break;case 93:i.commit(n[s-4],n[s-6],n[s-2],n[s]);break;case 94:i.commit(n[s-4],n[s-6],n[s],n[s-2]);break;case 95:i.commit(n[s-2],n[s-6],n[s-4],n[s]);break;case 96:i.commit(n[s],n[s-6],n[s-4],n[s-2]);break;case 97:i.commit(n[s-2],n[s-6],n[s],n[s-4]);break;case 98:i.commit(n[s],n[s-6],n[s-2],n[s-4]);break;case 99:i.commit(n[s],n[s-4],n[s-2],n[s-6]);break;case 100:i.commit(n[s-2],n[s-4],n[s],n[s-6]);break;case 101:i.commit(n[s],n[s-2],n[s-4],n[s-6]);break;case 102:i.commit(n[s-2],n[s],n[s-4],n[s-6]);break;case 103:i.commit(n[s-4],n[s-2],n[s],n[s-6]);break;case 104:i.commit(n[s-4],n[s],n[s-2],n[s-6]);break;case 105:i.commit(n[s-2],n[s-4],n[s-6],n[s]);break;case 106:i.commit(n[s],n[s-4],n[s-6],n[s-2]);break;case 107:i.commit(n[s-2],n[s],n[s-6],n[s-4]);break;case 108:i.commit(n[s],n[s-2],n[s-6],n[s-4]);break;case 109:i.commit(n[s-4],n[s-2],n[s-6],n[s]);break;case 110:i.commit(n[s-4],n[s],n[s-6],n[s-2]);break;case 111:this.$="";break;case 112:this.$=n[s];break;case 113:this.$=i.commitType.NORMAL;break;case 114:this.$=i.commitType.REVERSE;break;case 115:this.$=i.commitType.HIGHLIGHT;break;case 118:i.parseDirective("%%{","open_directive");break;case 119:i.parseDirective(n[s],"type_directive");break;case 120:n[s]=n[s].trim().replace(/'/g,'"'),i.parseDirective(n[s],"arg_directive");break;case 121:i.parseDirective("}%%","close_directive","gitGraph")}},table:[{3:1,4:2,5:3,6:e,8:c,14:i,46:8,50:r,55:n},{1:[3]},{3:10,4:2,5:3,6:e,8:c,14:i,46:8,50:r,55:n},{3:11,4:2,5:3,6:e,8:c,14:i,46:8,50:r,55:n},{7:12,8:a,9:[1,13],10:[1,14],11:15,14:s},t(o,[2,124]),t(o,[2,125]),t(o,[2,126]),{47:17,51:[1,18]},{51:[2,118]},{1:[2,1]},{1:[2,2]},{8:[1,19]},{7:20,8:a,11:15,14:s},{9:[1,21]},t(l,[2,10],{12:22,13:[1,23]}),t(h,[2,9]),{9:[1,25],48:24,53:m},t([9,53],[2,119]),{1:[2,3]},{8:[1,27]},{7:28,8:a,11:15,14:s},{8:[2,7],14:[1,31],15:29,16:30,17:32,18:33,19:34,20:[1,35],22:[1,36],24:[1,37],25:[1,38],26:39,27:[1,40],29:[1,44],32:[1,43],37:[1,42],40:[1,41]},t(h,[2,8]),t(u,[2,116]),{49:45,52:[1,46]},t(u,[2,121]),{1:[2,4]},{8:[1,47]},t(l,[2,11]),{4:48,8:c,14:i,55:n},t(l,[2,13]),t(y,[2,14]),t(y,[2,15]),t(y,[2,16]),{21:[1,49]},{23:[1,50]},t(y,[2,19]),t(y,[2,20]),t(y,[2,21]),{28:51,34:p,54:g},t(y,[2,111],{41:54,33:[1,57],34:[1,59],35:[1,55],38:[1,56],42:[1,58]}),{28:60,34:p,54:g},{33:[1,61],35:[1,62]},{28:63,34:p,54:g},{48:64,53:m},{53:[2,120]},{1:[2,5]},t(l,[2,12]),t(y,[2,17]),t(y,[2,18]),t(y,[2,22]),t(d,[2,122]),t(d,[2,123]),t(y,[2,46]),{34:[1,65]},{39:66,43:b,44:f,45:k},{34:[1,70]},{34:[1,71]},t(y,[2,112]),t(y,[2,30],{33:[1,72],35:[1,74],38:[1,73]}),{34:[1,75]},{34:[1,76],36:[1,77]},t(y,[2,23],{30:[1,78]}),t(u,[2,117]),t(y,[2,47],{33:[1,80],38:[1,79],42:[1,81]}),t(y,[2,48],{33:[1,83],35:[1,82],42:[1,84]}),t(_,[2,113]),t(_,[2,114]),t(_,[2,115]),t(y,[2,51],{35:[1,85],38:[1,86],42:[1,87]}),t(y,[2,62],{33:[1,90],35:[1,88],38:[1,89]}),{34:[1,91]},{39:92,43:b,44:f,45:k},{34:[1,93]},t(y,[2,25],{35:[1,94]}),{33:[1,95]},{33:[1,96]},{31:[1,97]},{39:98,43:b,44:f,45:k},{34:[1,99]},{34:[1,100]},{34:[1,101]},{34:[1,102]},{34:[1,103]},{34:[1,104]},{39:105,43:b,44:f,45:k},{34:[1,106]},{34:[1,107]},{39:108,43:b,44:f,45:k},{34:[1,109]},t(y,[2,31],{35:[1,111],38:[1,110]}),t(y,[2,32],{33:[1,113],35:[1,112]}),t(y,[2,33],{33:[1,114],38:[1,115]}),{34:[1,116],36:[1,117]},{34:[1,118]},{34:[1,119]},t(y,[2,24]),t(y,[2,49],{33:[1,120],42:[1,121]}),t(y,[2,53],{38:[1,122],42:[1,123]}),t(y,[2,63],{33:[1,125],38:[1,124]}),t(y,[2,50],{33:[1,126],42:[1,127]}),t(y,[2,55],{35:[1,128],42:[1,129]}),t(y,[2,66],{33:[1,131],35:[1,130]}),t(y,[2,52],{38:[1,132],42:[1,133]}),t(y,[2,54],{35:[1,134],42:[1,135]}),t(y,[2,67],{35:[1,137],38:[1,136]}),t(y,[2,64],{33:[1,139],38:[1,138]}),t(y,[2,65],{33:[1,141],35:[1,140]}),t(y,[2,68],{35:[1,143],38:[1,142]}),{39:144,43:b,44:f,45:k},{34:[1,145]},{34:[1,146]},{34:[1,147]},{34:[1,148]},{39:149,43:b,44:f,45:k},t(y,[2,26]),t(y,[2,27]),t(y,[2,28]),t(y,[2,29]),{34:[1,150]},{34:[1,151]},{39:152,43:b,44:f,45:k},{34:[1,153]},{39:154,43:b,44:f,45:k},{34:[1,155]},{34:[1,156]},{34:[1,157]},{34:[1,158]},{34:[1,159]},{34:[1,160]},{34:[1,161]},{39:162,43:b,44:f,45:k},{34:[1,163]},{34:[1,164]},{34:[1,165]},{39:166,43:b,44:f,45:k},{34:[1,167]},{39:168,43:b,44:f,45:k},{34:[1,169]},{34:[1,170]},{34:[1,171]},{39:172,43:b,44:f,45:k},{34:[1,173]},t(y,[2,37],{35:[1,174]}),t(y,[2,38],{38:[1,175]}),t(y,[2,36],{33:[1,176]}),t(y,[2,39],{35:[1,177]}),t(y,[2,34],{38:[1,178]}),t(y,[2,35],{33:[1,179]}),t(y,[2,60],{42:[1,180]}),t(y,[2,73],{33:[1,181]}),t(y,[2,61],{42:[1,182]}),t(y,[2,84],{38:[1,183]}),t(y,[2,74],{33:[1,184]}),t(y,[2,83],{38:[1,185]}),t(y,[2,59],{42:[1,186]}),t(y,[2,72],{33:[1,187]}),t(y,[2,58],{42:[1,188]}),t(y,[2,78],{35:[1,189]}),t(y,[2,71],{33:[1,190]}),t(y,[2,77],{35:[1,191]}),t(y,[2,57],{42:[1,192]}),t(y,[2,85],{38:[1,193]}),t(y,[2,56],{42:[1,194]}),t(y,[2,79],{35:[1,195]}),t(y,[2,80],{35:[1,196]}),t(y,[2,86],{38:[1,197]}),t(y,[2,70],{33:[1,198]}),t(y,[2,81],{38:[1,199]}),t(y,[2,69],{33:[1,200]}),t(y,[2,75],{35:[1,201]}),t(y,[2,76],{35:[1,202]}),t(y,[2,82],{38:[1,203]}),{34:[1,204]},{39:205,43:b,44:f,45:k},{34:[1,206]},{34:[1,207]},{39:208,43:b,44:f,45:k},{34:[1,209]},{34:[1,210]},{34:[1,211]},{34:[1,212]},{39:213,43:b,44:f,45:k},{34:[1,214]},{39:215,43:b,44:f,45:k},{34:[1,216]},{34:[1,217]},{34:[1,218]},{34:[1,219]},{34:[1,220]},{34:[1,221]},{34:[1,222]},{39:223,43:b,44:f,45:k},{34:[1,224]},{34:[1,225]},{34:[1,226]},{39:227,43:b,44:f,45:k},{34:[1,228]},{39:229,43:b,44:f,45:k},{34:[1,230]},{34:[1,231]},{34:[1,232]},{39:233,43:b,44:f,45:k},t(y,[2,40]),t(y,[2,42]),t(y,[2,41]),t(y,[2,43]),t(y,[2,45]),t(y,[2,44]),t(y,[2,101]),t(y,[2,102]),t(y,[2,99]),t(y,[2,100]),t(y,[2,104]),t(y,[2,103]),t(y,[2,108]),t(y,[2,107]),t(y,[2,106]),t(y,[2,105]),t(y,[2,110]),t(y,[2,109]),t(y,[2,98]),t(y,[2,97]),t(y,[2,96]),t(y,[2,95]),t(y,[2,93]),t(y,[2,94]),t(y,[2,92]),t(y,[2,91]),t(y,[2,90]),t(y,[2,89]),t(y,[2,87]),t(y,[2,88])],defaultActions:{9:[2,118],10:[2,1],11:[2,2],19:[2,3],27:[2,4],46:[2,120],47:[2,5]},parseError:function(t,e){if(!e.recoverable){var c=new Error(t);throw c.hash=e,c}this.trace(t)},parse:function(t){var e=this,c=[0],i=[],r=[null],n=[],a=this.table,s="",o=0,l=0,h=n.slice.call(arguments,1),m=Object.create(this.lexer),u={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(u.yy[y]=this.yy[y]);m.setInput(t,u.yy),u.yy.lexer=m,u.yy.parser=this,"undefined"==typeof m.yylloc&&(m.yylloc={});var p=m.yylloc;n.push(p);var g=m.options&&m.options.ranges;function d(){var t;return"number"!==typeof(t=i.pop()||m.lex()||1)&&(t instanceof Array&&(t=(i=t).pop()),t=e.symbols_[t]||t),t}"function"===typeof u.yy.parseError?this.parseError=u.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var b,f,k,_,x,v,w,E,T={};;){if(f=c[c.length-1],this.defaultActions[f]?k=this.defaultActions[f]:(null!==b&&"undefined"!=typeof b||(b=d()),k=a[f]&&a[f][b]),"undefined"===typeof k||!k.length||!k[0]){var L="";for(x in E=[],a[f])this.terminals_[x]&&x>2&&E.push("'"+this.terminals_[x]+"'");L=m.showPosition?"Parse error on line "+(o+1)+":\n"+m.showPosition()+"\nExpecting "+E.join(", ")+", got '"+(this.terminals_[b]||b)+"'":"Parse error on line "+(o+1)+": Unexpected "+(1==b?"end of input":"'"+(this.terminals_[b]||b)+"'"),this.parseError(L,{text:m.match,token:this.terminals_[b]||b,line:m.yylineno,loc:p,expected:E})}if(k[0]instanceof Array&&k.length>1)throw new Error("Parse Error: multiple actions possible at state: "+f+", token: "+b);switch(k[0]){case 1:c.push(b),r.push(m.yytext),n.push(m.yylloc),c.push(k[1]),b=null,l=m.yyleng,s=m.yytext,o=m.yylineno,p=m.yylloc;break;case 2:if(v=this.productions_[k[1]][1],T.$=r[r.length-v],T._$={first_line:n[n.length-(v||1)].first_line,last_line:n[n.length-1].last_line,first_column:n[n.length-(v||1)].first_column,last_column:n[n.length-1].last_column},g&&(T._$.range=[n[n.length-(v||1)].range[0],n[n.length-1].range[1]]),"undefined"!==typeof(_=this.performAction.apply(T,[s,l,o,u.yy,k[1],r,n].concat(h))))return _;v&&(c=c.slice(0,-1*v*2),r=r.slice(0,-1*v),n=n.slice(0,-1*v)),c.push(this.productions_[k[1]][0]),r.push(T.$),n.push(T._$),w=a[c[c.length-2]][c[c.length-1]],c.push(w);break;case 3:return!0}}return!0}},v={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,c=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var i=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var r=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===i.length?this.yylloc.first_column:0)+i[i.length-c.length].length-c[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[r[0],r[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"},test_match:function(t,e){var c,i,r;if(this.options.backtrack_lexer&&(r={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(r.yylloc.range=this.yylloc.range.slice(0))),(i=t[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=i.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:i?i[i.length-1].length-i[i.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],c=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),c)return c;if(this._backtrack){for(var n in r)this[n]=r[n];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,c,i;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var r=this._currentRules(),n=0;n<r.length;n++)if((c=this._input.match(this.rules[r[n]]))&&(!e||c[0].length>e[0].length)){if(e=c,i=n,this.options.backtrack_lexer){if(!1!==(t=this.test_match(c,r[n])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,r[i]))&&t:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:"INITIAL"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(t,e,c,i){switch(c){case 0:return this.begin("open_directive"),50;case 1:return this.begin("type_directive"),51;case 2:return this.popState(),this.begin("arg_directive"),9;case 3:return this.popState(),this.popState(),53;case 4:return 52;case 5:return this.begin("acc_title"),20;case 6:return this.popState(),"acc_title_value";case 7:return this.begin("acc_descr"),22;case 8:return this.popState(),"acc_descr_value";case 9:this.begin("acc_descr_multiline");break;case 10:case 34:case 38:this.popState();break;case 11:return"acc_descr_multiline_value";case 12:return 14;case 13:case 14:break;case 15:return 6;case 16:return 40;case 17:return 33;case 18:return 38;case 19:return 42;case 20:return 43;case 21:return 44;case 22:return 45;case 23:return 35;case 24:return 29;case 25:return 30;case 26:return 37;case 27:return 32;case 28:return 27;case 29:case 30:return 10;case 31:return 9;case 32:return"CARET";case 33:this.begin("options");break;case 35:return 13;case 36:return 36;case 37:this.begin("string");break;case 39:return 34;case 40:return 31;case 41:return 54;case 42:return 8}},rules:[/^(?:%%\{)/i,/^(?:((?:(?!\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\}%%)/i,/^(?:((?:(?!\}%%).|\n)*))/i,/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:BT\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[10,11],inclusive:!1},acc_descr:{rules:[8],inclusive:!1},acc_title:{rules:[6],inclusive:!1},close_directive:{rules:[],inclusive:!1},arg_directive:{rules:[3,4],inclusive:!1},type_directive:{rules:[2,3],inclusive:!1},open_directive:{rules:[1],inclusive:!1},options:{rules:[34,35],inclusive:!1},string:{rules:[38,39],inclusive:!1},INITIAL:{rules:[0,5,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,40,41,42,43],inclusive:!0}}};function w(){this.yy={}}return x.lexer=v,w.prototype=x,x.Parser=w,new w}());o.parser=o;const l=o;let h=(0,i.g)().gitGraph.mainBranchName,m=(0,i.g)().gitGraph.mainBranchOrder,u={},y=null,p={};p[h]={name:h,order:m};let g={};g[h]=y;let d=h,b="LR",f=0;function k(){return(0,r.o)({length:7})}let _={};const x=function(t){if(t=i.d.sanitizeText(t,(0,i.g)()),void 0===g[t]){let e=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+t+'")');throw e.hash={text:"checkout "+t,token:"checkout "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+t+'"']},e}{d=t;const e=g[d];y=u[e]}};function v(t,e,c){const i=t.indexOf(e);-1===i?t.push(c):t.splice(i,1,c)}function w(t){const e=t.reduce(((t,e)=>t.seq>e.seq?t:e),t[0]);let c="";t.forEach((function(t){c+=t===e?"\t*":"\t|"}));const r=[c,e.id,e.seq];for(let i in g)g[i]===e.id&&r.push(i);if(i.l.debug(r.join(" ")),e.parents&&2==e.parents.length){const c=u[e.parents[0]];v(t,e,c),t.push(u[e.parents[1]])}else{if(0==e.parents.length)return;{const c=u[e.parents];v(t,e,c)}}w(t=function(t,e){const c=Object.create(null);return t.reduce(((t,i)=>{const r=e(i);return c[r]||(c[r]=!0,t.push(i)),t}),[])}(t,(t=>t.id)))}const E=function(){const t=Object.keys(u).map((function(t){return u[t]}));return t.forEach((function(t){i.l.debug(t.id)})),t.sort(((t,e)=>t.seq-e.seq)),t},T={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},L={parseDirective:function(t,e,c){n.m.parseDirective(this,t,e,c)},getConfig:()=>(0,i.g)().gitGraph,setDirection:function(t){b=t},setOptions:function(t){i.l.debug("options str",t),t=(t=t&&t.trim())||"{}";try{_=JSON.parse(t)}catch(e){i.l.error("error while parsing gitGraph options",e.message)}},getOptions:function(){return _},commit:function(t,e,c,r){i.l.debug("Entering commit:",t,e,c,r),e=i.d.sanitizeText(e,(0,i.g)()),t=i.d.sanitizeText(t,(0,i.g)()),r=i.d.sanitizeText(r,(0,i.g)());const n={id:e||f+"-"+k(),message:t,seq:f++,type:c||T.NORMAL,tag:r||"",parents:null==y?[]:[y.id],branch:d};y=n,u[n.id]=n,g[d]=n.id,i.l.debug("in pushCommit "+n.id)},branch:function(t,e){if(t=i.d.sanitizeText(t,(0,i.g)()),void 0!==g[t]){let e=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+t+'")');throw e.hash={text:"branch "+t,token:"branch "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+t+'"']},e}g[t]=null!=y?y.id:null,p[t]={name:t,order:e?parseInt(e,10):null},x(t),i.l.debug("in createBranch")},merge:function(t,e,c,r){t=i.d.sanitizeText(t,(0,i.g)()),e=i.d.sanitizeText(e,(0,i.g)());const n=u[g[d]],a=u[g[t]];if(d===t){let e=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(void 0===n||!n){let e=new Error('Incorrect usage of "merge". Current branch ('+d+")has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},e}if(void 0===g[t]){let e=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") does not exist");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+t]},e}if(void 0===a||!a){let e=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},e}if(n===a){let e=new Error('Incorrect usage of "merge". Both branches have same head');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(e&&void 0!==u[e]){let i=new Error('Incorrect usage of "merge". Commit with id:'+e+" already exists, use different custom Id");throw i.hash={text:"merge "+t+e+c+r,token:"merge "+t+e+c+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+t+" "+e+"_UNIQUE "+c+" "+r]},i}const s={id:e||f+"-"+k(),message:"merged branch "+t+" into "+d,seq:f++,parents:[null==y?null:y.id,g[t]],branch:d,type:T.MERGE,customType:c,customId:!!e,tag:r||""};y=s,u[s.id]=s,g[d]=s.id,i.l.debug(g),i.l.debug("in mergeBranch")},cherryPick:function(t,e,c){if(i.l.debug("Entering cherryPick:",t,e,c),t=i.d.sanitizeText(t,(0,i.g)()),e=i.d.sanitizeText(e,(0,i.g)()),c=i.d.sanitizeText(c,(0,i.g)()),!t||void 0===u[t]){let c=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw c.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},c}let r=u[t],n=r.branch;if(r.type===T.MERGE){let c=new Error('Incorrect usage of "cherryPick". Source commit should not be a merge commit');throw c.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},c}if(!e||void 0===u[e]){var a;if(n===d){let c=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw c.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},c}const s=u[g[d]];if(void 0===s||!s){let c=new Error('Incorrect usage of "cherry-pick". Current branch ('+d+")has no commits");throw c.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},c}const o={id:f+"-"+k(),message:"cherry-picked "+r+" into "+d,seq:f++,parents:[null==y?null:y.id,r.id],branch:d,type:T.CHERRY_PICK,tag:null!==(a=c)&&void 0!==a?a:"cherry-pick:"+r.id};y=o,u[o.id]=o,g[d]=o.id,i.l.debug(g),i.l.debug("in cherryPick")}},checkout:x,prettyPrint:function(){i.l.debug(u);w([E()[0]])},clear:function(){u={},y=null;let t=(0,i.g)().gitGraph.mainBranchName,e=(0,i.g)().gitGraph.mainBranchOrder;g={},g[t]=null,p={},p[t]={name:t,order:e},d=t,f=0,(0,a.f)()},getBranchesAsObjArray:function(){return Object.values(p).map(((t,e)=>null!==t.order?t:{...t,order:parseFloat("0.".concat(e),10)})).sort(((t,e)=>t.order-e.order)).map((t=>{let{name:e}=t;return{name:e}}))},getBranches:function(){return g},getCommits:function(){return u},getCommitsArray:E,getCurrentBranch:function(){return d},getDirection:function(){return b},getHead:function(){return y},setAccTitle:a.s,getAccTitle:a.g,getAccDescription:a.a,setAccDescription:a.b,setDiagramTitle:a.d,getDiagramTitle:a.e,commitType:T};let M={};const I=0,O=1,A=2,R=3,C=4;let S={},P={},N=[],G=0;const D=(t,e,c)=>{const i=(0,r.q)().gitGraph,n=t.append("g").attr("class","commit-bullets"),a=t.append("g").attr("class","commit-labels");let s=0;Object.keys(e).sort(((t,c)=>e[t].seq-e[c].seq)).forEach((t=>{const r=e[t],o=S[r.branch].pos,l=s+10;if(c){let t,e=void 0!==r.customType&&""!==r.customType?r.customType:r.type;switch(e){case I:t="commit-normal";break;case O:t="commit-reverse";break;case A:t="commit-highlight";break;case R:t="commit-merge";break;case C:t="commit-cherry-pick";break;default:t="commit-normal"}if(e===A){const e=n.append("rect");e.attr("x",l-10),e.attr("y",o-10),e.attr("height",20),e.attr("width",20),e.attr("class","commit ".concat(r.id," commit-highlight").concat(S[r.branch].index%8," ").concat(t,"-outer")),n.append("rect").attr("x",l-6).attr("y",o-6).attr("height",12).attr("width",12).attr("class","commit ".concat(r.id," commit").concat(S[r.branch].index%8," ").concat(t,"-inner"))}else if(e===C)n.append("circle").attr("cx",l).attr("cy",o).attr("r",10).attr("class","commit ".concat(r.id," ").concat(t)),n.append("circle").attr("cx",l-3).attr("cy",o+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(r.id," ").concat(t)),n.append("circle").attr("cx",l+3).attr("cy",o+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(r.id," ").concat(t)),n.append("line").attr("x1",l+3).attr("y1",o+1).attr("x2",l).attr("y2",o-5).attr("stroke","#fff").attr("class","commit ".concat(r.id," ").concat(t)),n.append("line").attr("x1",l-3).attr("y1",o+1).attr("x2",l).attr("y2",o-5).attr("stroke","#fff").attr("class","commit ".concat(r.id," ").concat(t));else{const c=n.append("circle");if(c.attr("cx",l),c.attr("cy",o),c.attr("r",r.type===R?9:10),c.attr("class","commit ".concat(r.id," commit").concat(S[r.branch].index%8)),e===R){const e=n.append("circle");e.attr("cx",l),e.attr("cy",o),e.attr("r",6),e.attr("class","commit ".concat(t," ").concat(r.id," commit").concat(S[r.branch].index%8))}if(e===O){n.append("path").attr("d","M ".concat(l-5,",").concat(o-5,"L").concat(l+5,",").concat(o+5,"M").concat(l-5,",").concat(o+5,"L").concat(l+5,",").concat(o-5)).attr("class","commit ".concat(t," ").concat(r.id," commit").concat(S[r.branch].index%8))}}}if(P[r.id]={x:s+10,y:o},c){const t=4,e=2;if(r.type!==C&&(r.customId&&r.type===R||r.type!==R)&&i.showCommitLabel){const t=a.append("g"),c=t.insert("rect").attr("class","commit-label-bkg"),n=t.append("text").attr("x",s).attr("y",o+25).attr("class","commit-label").text(r.id);let l=n.node().getBBox();if(c.attr("x",s+10-l.width/2-e).attr("y",o+13.5).attr("width",l.width+2*e).attr("height",l.height+2*e),n.attr("x",s+10-l.width/2),i.rotateCommitLabel){let e=-7.5-(l.width+10)/25*9.5,c=10+l.width/25*8.5;t.attr("transform","translate("+e+", "+c+") rotate("+"-45, "+s+", "+o+")")}}if(r.tag){const c=a.insert("polygon"),i=a.append("circle"),n=a.append("text").attr("y",o-16).attr("class","tag-label").text(r.tag);let l=n.node().getBBox();n.attr("x",s+10-l.width/2);const h=l.height/2,m=o-19.2;c.attr("class","tag-label-bkg").attr("points","\n          ".concat(s-l.width/2-t/2,",").concat(m+e,"\n          ").concat(s-l.width/2-t/2,",").concat(m-e,"\n          ").concat(s+10-l.width/2-t,",").concat(m-h-e,"\n          ").concat(s+10+l.width/2+t,",").concat(m-h-e,"\n          ").concat(s+10+l.width/2+t,",").concat(m+h+e,"\n          ").concat(s+10-l.width/2-t,",").concat(m+h+e)),i.attr("cx",s-l.width/2+t/2).attr("cy",m).attr("r",1.5).attr("class","tag-hole")}}s+=50,s>G&&(G=s)}))},$=function(t,e){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const i=t+Math.abs(t-e)/2;if(c>5)return i;if(N.every((t=>Math.abs(t-i)>=10)))return N.push(i),i;const r=Math.abs(t-e);return $(t,e-r/5,c+1)},B=(t,e,c,i)=>{const r=P[e.id],n=P[c.id],a=((t,e,c)=>Object.keys(c).filter((i=>c[i].branch===e.branch&&c[i].seq>t.seq&&c[i].seq<e.seq)).length>0)(e,c,i);let s,o="",l="",h=0,m=0,u=S[c.branch].index;if(a){o="A 10 10, 0, 0, 0,",l="A 10 10, 0, 0, 1,",h=10,m=10,u=S[c.branch].index;const t=r.y<n.y?$(r.y,n.y):$(n.y,r.y);s=r.y<n.y?"M ".concat(r.x," ").concat(r.y," L ").concat(r.x," ").concat(t-h," ").concat(o," ").concat(r.x+m," ").concat(t," L ").concat(n.x-h," ").concat(t," ").concat(l," ").concat(n.x," ").concat(t+m," L ").concat(n.x," ").concat(n.y):"M ".concat(r.x," ").concat(r.y," L ").concat(r.x," ").concat(t+h," ").concat(l," ").concat(r.x+m," ").concat(t," L ").concat(n.x-h," ").concat(t," ").concat(o," ").concat(n.x," ").concat(t-m," L ").concat(n.x," ").concat(n.y)}else r.y<n.y&&(o="A 20 20, 0, 0, 0,",h=20,m=20,u=S[c.branch].index,s="M ".concat(r.x," ").concat(r.y," L ").concat(r.x," ").concat(n.y-h," ").concat(o," ").concat(r.x+m," ").concat(n.y," L ").concat(n.x," ").concat(n.y)),r.y>n.y&&(o="A 20 20, 0, 0, 0,",h=20,m=20,u=S[e.branch].index,s="M ".concat(r.x," ").concat(r.y," L ").concat(n.x-h," ").concat(r.y," ").concat(o," ").concat(n.x," ").concat(r.y-m," L ").concat(n.x," ").concat(n.y)),r.y===n.y&&(u=S[e.branch].index,s="M ".concat(r.x," ").concat(r.y," L ").concat(r.x," ").concat(n.y-h," ").concat(o," ").concat(r.x+m," ").concat(n.y," L ").concat(n.x," ").concat(n.y));t.append("path").attr("d",s).attr("class","arrow arrow"+u%8)},H=(t,e)=>{const c=(0,r.q)().gitGraph,i=t.append("g");e.forEach(((t,e)=>{const r=e%8,n=S[t.name].pos,a=i.append("line");a.attr("x1",0),a.attr("y1",n),a.attr("x2",G),a.attr("y2",n),a.attr("class","branch branch"+r),N.push(n);const s=(t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","text");let c=[];c="string"===typeof t?t.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(t)?t:[];for(const i of c){const t=document.createElementNS("http://www.w3.org/2000/svg","tspan");t.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.setAttribute("dy","1em"),t.setAttribute("x","0"),t.setAttribute("class","row"),t.textContent=i.trim(),e.appendChild(t)}return e})(t.name),o=i.insert("rect"),l=i.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+r);l.node().appendChild(s);let h=s.getBBox();o.attr("class","branchLabelBkg label"+r).attr("rx",4).attr("ry",4).attr("x",-h.width-4-(!0===c.rotateCommitLabel?30:0)).attr("y",-h.height/2+8).attr("width",h.width+18).attr("height",h.height+4),l.attr("transform","translate("+(-h.width-14-(!0===c.rotateCommitLabel?30:0))+", "+(n-h.height/2-1)+")"),o.attr("transform","translate(-19, "+(n-h.height/2)+")")}))},z={parser:l,db:L,renderer:{draw:function(t,e,c,n){var a;S={},P={},M={},G=0,N=[];const o=(0,r.q)(),l=o.gitGraph;i.l.debug("in gitgraph renderer",t+"\n","id:",e,c),M=n.db.getCommits();const h=n.db.getBranchesAsObjArray();let m=0;h.forEach(((t,e)=>{S[t.name]={pos:m,index:e},m+=50+(l.rotateCommitLabel?40:0)}));const u=(0,s.Ys)('[id="'.concat(e,'"]'));D(u,M,!1),l.showBranches&&H(u,h),((t,e)=>{const c=t.append("g").attr("class","commit-arrows");Object.keys(e).forEach((t=>{const i=e[t];i.parents&&i.parents.length>0&&i.parents.forEach((t=>{B(c,e[t],i,e)}))}))})(u,M),D(u,M,!0),r.u.insertTitle(u,"gitTitleText",l.titleTopMargin,n.db.getDiagramTitle()),(0,r.s)(void 0,u,l.diagramPadding,null!==(a=l.useMaxWidth)&&void 0!==a?a:o.useMaxWidth)}},styles:t=>"\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ".concat([0,1,2,3,4,5,6,7].map((e=>"\n        .branch-label".concat(e," { fill: ").concat(t["gitBranchLabel"+e],"; }\n        .commit").concat(e," { stroke: ").concat(t["git"+e],"; fill: ").concat(t["git"+e],"; }\n        .commit-highlight").concat(e," { stroke: ").concat(t["gitInv"+e],"; fill: ").concat(t["gitInv"+e],"; }\n        .label").concat(e,"  { fill: ").concat(t["git"+e],"; }\n        .arrow").concat(e," { stroke: ").concat(t["git"+e],"; }\n        "))).join("\n"),"\n\n  .branch {\n    stroke-width: 1;\n    stroke: ").concat(t.lineColor,";\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelColor,";}\n  .commit-label-bkg { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelBackground,"; opacity: 0.5; }\n  .tag-label { font-size: ").concat(t.tagLabelFontSize,"; fill: ").concat(t.tagLabelColor,";}\n  .tag-label-bkg { fill: ").concat(t.tagLabelBackground,"; stroke: ").concat(t.tagLabelBorder,"; }\n  .tag-hole { fill: ").concat(t.textColor,"; }\n\n  .commit-merge {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n  .commit-reverse {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ").concat(t.textColor,";\n  }\n  }\n")}}}]);
//# sourceMappingURL=678.fcbc45f2.chunk.js.map